!function(T,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("ical.js"),require("uuid")):"function"==typeof define&&define.amd?define(["exports","ical.js","uuid"],r):r((T="undefined"!=typeof globalThis?globalThis:T||self)["@nextcloud/calendar-js"]={},T.ICAL,T.uuid)}(this,(function(T,r,e){"use strict";function n(T){return T&&"object"==typeof T&&"default"in T?T:{default:T}}var t=n(r);
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class i{constructor(T={}){if(new.target===i)throw new TypeError("Cannot instantiate abstract class AbstractParser");this._options=Object.assign({},T),this._name=null,this._color=null,this._sourceURL=null,this._refreshInterval=null,this._calendarTimezone=null,this._errors=[]}getName(){return this._name}getColor(){return this._color}offersWebcalFeed(){return null!==this._sourceURL}getSourceURL(){return this._sourceURL}getRefreshInterval(){return this._refreshInterval}getCalendarTimezone(){return this._calendarTimezone}parse(T){throw new TypeError("Abstract method not implemented by subclass")}*getItemIterator(){throw new TypeError("Abstract method not implemented by subclass")}getAllItems(){return Array.from(this.getItemIterator())}containsVEvents(){return!1}containsVJournals(){return!1}containsVTodos(){return!1}containsVFreeBusy(){return!1}hasErrors(){return 0!==this._errors.length}getErrorList(){return this._errors.slice()}getItemCount(){return 0}_getOption(T,r){return Object.prototype.hasOwnProperty.call(this._options,T)?this._options[T]:r}static getMimeTypes(){throw new TypeError("Abstract method not implemented by subclass")}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class a extends Error{}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */function A(T){return class extends T{constructor(...T){super(...T),this._mutable=!0}isLocked(){return!this._mutable}lock(){this._mutable=!1}unlock(){this._mutable=!0}_modify(){if(!this._mutable)throw new a}_modifyContent(){this._modify()}}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class E extends Error{}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */function D(T){return T.toLowerCase()}function s(T){return T.toUpperCase()}function o(T){return T.charAt(0).toUpperCase()+T.slice(1)}function R(T,r){return T.startsWith(r)||(T=r+T),T}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */const S=new Map;function F(T,r){return S.get(T)||r}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */function N(T){return new t.default.Property(D(T))}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */function u(T){return class extends T{constructor(...T){super(...T),this._subscribers=[]}subscribe(T){this._subscribers.push(T)}unsubscribe(T){const r=this._subscribers.indexOf(T);-1!==r&&this._subscribers.splice(r,1)}_notifySubscribers(...T){for(const r of this._subscribers)r(...T)}}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class O extends(u(A(class{}))){constructor(T,r=null){super(),this._name=s(T),this._value=r}get name(){return this._name}get value(){return this._value}set value(T){this._modifyContent(),this._value=T}getFirstValue(){return this.isMultiValue()?this.value.length>0?this.value[0]:null:this.value}*getValueIterator(){this.isMultiValue()?yield*this.value.slice()[Symbol.iterator]():yield this.value}isMultiValue(){return Array.isArray(this._value)}clone(){const T=new this.constructor(this._name);return this.isMultiValue()?T.value=this._value.slice():T.value=this._value,T}_modifyContent(){super._modifyContent(),this._notifySubscribers()}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class l extends(u(A(class{}))){constructor(T){if(new.target===l)throw new TypeError("Cannot instantiate abstract class AbstractValue");super(),this._innerValue=T}toICALJs(){return this._innerValue}_modifyContent(){super._modifyContent(),this._notifySubscribers()}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class c extends l{get rawValue(){return this._innerValue.value}set rawValue(T){this._modifyContent(),this._innerValue.value=T}get value(){return this._innerValue.decodeValue()}set value(T){this._modifyContent(),this._innerValue.setEncodedValue(T)}clone(){return c.fromRawValue(this._innerValue.value)}static fromICALJs(T){return new c(T)}static fromRawValue(T){const r=new t.default.Binary(T);return c.fromICALJs(r)}static fromDecodedValue(T){const r=new t.default.Binary;return r.setEncodedValue(T),c.fromICALJs(r)}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class d extends l{get weeks(){return this._innerValue.weeks}set weeks(T){if(this._modifyContent(),T<0)throw new TypeError("Weeks cannot be negative, use isNegative instead");this._innerValue.weeks=T}get days(){return this._innerValue.days}set days(T){if(this._modifyContent(),T<0)throw new TypeError("Days cannot be negative, use isNegative instead");this._innerValue.days=T}get hours(){return this._innerValue.hours}set hours(T){if(this._modifyContent(),T<0)throw new TypeError("Hours cannot be negative, use isNegative instead");this._innerValue.hours=T}get minutes(){return this._innerValue.minutes}set minutes(T){if(this._modifyContent(),T<0)throw new TypeError("Minutes cannot be negative, use isNegative instead");this._innerValue.minutes=T}get seconds(){return this._innerValue.seconds}set seconds(T){if(this._modifyContent(),T<0)throw new TypeError("Seconds cannot be negative, use isNegative instead");this._innerValue.seconds=T}get isNegative(){return this._innerValue.isNegative}set isNegative(T){this._modifyContent(),this._innerValue.isNegative=!!T}get totalSeconds(){return this._innerValue.toSeconds()}set totalSeconds(T){this._modifyContent(),this._innerValue.fromSeconds(T)}compare(T){return this._innerValue.compare(T.toICALJs())}addDuration(T){this._modifyContent(),this.totalSeconds+=T.totalSeconds,this._innerValue.normalize()}subtractDuration(T){this._modifyContent(),this.totalSeconds-=T.totalSeconds,this._innerValue.normalize()}clone(){return d.fromICALJs(this._innerValue.clone())}static fromICALJs(T){return new d(T)}static fromSeconds(T){const r=t.default.Duration.fromSeconds(T);return new d(r)}static fromData(T){const r=t.default.Duration.fromData(T);return new d(r)}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class Y extends l{get year(){return this._innerValue.year}set year(T){this._modifyContent(),this._innerValue.year=T}get month(){return this._innerValue.month}set month(T){if(this._modifyContent(),T<1||T>12)throw new TypeError("Month out of range");this._innerValue.month=T}get day(){return this._innerValue.day}set day(T){if(this._modifyContent(),T<1||T>31)throw new TypeError("Day out of range");this._innerValue.day=T}get hour(){return this._innerValue.hour}set hour(T){if(this._modifyContent(),T<0||T>23)throw new TypeError("Hour out of range");this._innerValue.hour=T}get minute(){return this._innerValue.minute}set minute(T){if(this._modifyContent(),T<0||T>59)throw new TypeError("Minute out of range");this._innerValue.minute=T}get second(){return this._innerValue.second}set second(T){if(this._modifyContent(),T<0||T>59)throw new TypeError("Second out of range");this._innerValue.second=T}get timezoneId(){return this._innerValue.zone.tzid&&"floating"!==this._innerValue.zone.tzid&&"UTC"===this._innerValue.zone.tzid?this._innerValue.zone.tzid:this._innerValue.timezone?this._innerValue.timezone:this._innerValue.zone.tzid||null}get isDate(){return this._innerValue.isDate}set isDate(T){this._modifyContent(),this._innerValue.isDate=!!T,T&&(this._innerValue.hour=0,this._innerValue.minute=0,this._innerValue.second=0)}get unixTime(){return this._innerValue.toUnixTime()}get jsDate(){return this._innerValue.toJSDate()}addDuration(T){this._innerValue.addDuration(T.toICALJs())}subtractDateWithoutTimezone(T){const r=this._innerValue.subtractDate(T.toICALJs());return d.fromICALJs(r)}subtractDateWithTimezone(T){const r=this._innerValue.subtractDateTz(T.toICALJs());return d.fromICALJs(r)}compare(T){return this._innerValue.compare(T.toICALJs())}compareDateOnlyInGivenTimezone(T,r){return this._innerValue.compareDateOnlyTz(T.toICALJs(),r.toICALTimezone())}getInTimezone(T){const r=this._innerValue.convertToZone(T.toICALTimezone());return Y.fromICALJs(r)}getICALTimezone(){return this._innerValue.zone}getInICALTimezone(T){const r=this._innerValue.convertToZone(T);return Y.fromICALJs(r)}getInUTC(){const T=this._innerValue.convertToZone(t.default.Timezone.utcTimezone);return Y.fromICALJs(T)}silentlyReplaceTimezone(T){this._modify(),this._innerValue=new t.default.Time({year:this.year,month:this.month,day:this.day,hour:this.hour,minute:this.minute,second:this.second,isDate:this.isDate,timezone:T})}replaceTimezone(T){this._modifyContent(),this._innerValue=t.default.Time.fromData({year:this.year,month:this.month,day:this.day,hour:this.hour,minute:this.minute,second:this.second,isDate:this.isDate},T.toICALTimezone())}utcOffset(){return this._innerValue.utcOffset()}isFloatingTime(){return"floating"===this._innerValue.zone.tzid}clone(){return Y.fromICALJs(this._innerValue.clone())}static fromICALJs(T){return new Y(T)}static fromJSDate(T,r=!1){const e=t.default.Time.fromJSDate(T,r);return Y.fromICALJs(e)}static fromData(T,r){const e=t.default.Time.fromData(T,r?r.toICALTimezone():void 0);return Y.fromICALJs(e)}}Y.SUNDAY=t.default.Time.SUNDAY,Y.MONDAY=t.default.Time.MONDAY,Y.TUESDAY=t.default.Time.TUESDAY,Y.WEDNESDAY=t.default.Time.WEDNESDAY,Y.THURSDAY=t.default.Time.THURSDAY,Y.FRIDAY=t.default.Time.FRIDAY,Y.SATURDAY=t.default.Time.SATURDAY,Y.DEFAULT_WEEK_START=Y.MONDAY;
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */
class Z extends l{constructor(...T){super(...T),this._start=Y.fromICALJs(this._innerValue.start),this._end=null,this._duration=null}get start(){return this._start}set start(T){this._modifyContent(),this._start=T,this._innerValue.start=T.toICALJs()}get end(){return this._end||(this._duration&&(this._duration.lock(),this._duration=null),this._innerValue.end=this._innerValue.getEnd(),this._end=Y.fromICALJs(this._innerValue.end),this._innerValue.duration=null,this.isLocked()&&this._end.lock()),this._end}set end(T){this._modifyContent(),this._innerValue.duration=null,this._innerValue.end=T.toICALJs(),this._end=T}get duration(){return this._duration||(this._end&&(this._end.lock(),this._end=null),this._innerValue.duration=this._innerValue.getDuration(),this._duration=d.fromICALJs(this._innerValue.duration),this._innerValue.end=null,this.isLocked()&&this._duration.lock()),this._duration}set duration(T){this._modifyContent(),this._innerValue.end=null,this._innerValue.duration=T.toICALJs(),this._duration=T}lock(){super.lock(),this.start.lock(),this._end&&this._end.lock(),this._duration&&this._duration.lock()}unlock(){super.unlock(),this.start.unlock(),this._end&&this._end.unlock(),this._duration&&this._duration.unlock()}clone(){return Z.fromICALJs(this._innerValue.clone())}static fromICALJs(T){return new Z(T)}static fromDataWithEnd(T){const r=t.default.Period.fromData({start:T.start.toICALJs(),end:T.end.toICALJs()});return Z.fromICALJs(r)}static fromDataWithDuration(T){const r=t.default.Period.fromData({start:T.start.toICALJs(),duration:T.duration.toICALJs()});return Z.fromICALJs(r)}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */const M=["SECONDLY","MINUTELY","HOURLY","DAILY","WEEKLY","MONTHLY","YEARLY"];class I extends l{constructor(T,r){super(T),this._until=r}get interval(){return this._innerValue.interval}set interval(T){this._modifyContent(),this._innerValue.interval=parseInt(T,10)}get weekStart(){return this._innerValue.wkst}set weekStart(T){if(this._modifyContent(),T<Y.SUNDAY||T>Y.SATURDAY)throw new TypeError("Weekstart out of range");this._innerValue.wkst=T}get until(){return!this._until&&this._innerValue.until&&(this._until=Y.fromICALJs(this._innerValue.until)),this._until}set until(T){this._modifyContent(),this._until&&this._until.lock(),this._until=T,this._innerValue.count=null,this._innerValue.until=T.toICALJs()}get count(){return this._innerValue.count}set count(T){this._modifyContent(),this._until&&(this._until.lock(),this._until=null),this._innerValue.until=null,this._innerValue.count=parseInt(T,10)}get frequency(){return this._innerValue.freq}set frequency(T){if(this._modifyContent(),!M.includes(T))throw new TypeError("Unknown frequency");this._innerValue.freq=T}setToInfinite(){this._modifyContent(),this._until&&(this._until.lock(),this._until=null),this._innerValue.until=null,this._innerValue.count=null}isFinite(){return this._innerValue.isFinite()}isByCount(){return this._innerValue.isByCount()}addComponent(T,r){this._modifyContent(),this._innerValue.addComponent(T,r)}setComponent(T,r){this._modifyContent(),0===r.length?delete this._innerValue.parts[T.toUpperCase()]:this._innerValue.setComponent(T,r)}removeComponent(T){delete this._innerValue.parts[s(T)]}getComponent(T){return this._innerValue.getComponent(T)}isRuleValid(){return!0}lock(){super.lock(),this._until&&this._until.lock()}unlock(){super.unlock(),this._until&&this._until.unlock()}clone(){return I.fromICALJs(this._innerValue.clone())}static fromICALJs(T,r=null){return new I(T,r)}static fromData(T){let r=null;T.until&&(r=T.until,T.until=T.until.toICALJs());const e=t.default.Recur.fromData(T);return I.fromICALJs(e,r)}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class m extends l{get hours(){return this._innerValue.hours}set hours(T){this._modifyContent(),this._innerValue.hours=T}get minutes(){return this._innerValue.minutes}set minutes(T){this._modifyContent(),this._innerValue.minutes=T}get factor(){return this._innerValue.factor}set factor(T){if(this._modifyContent(),1!==T&&-1!==T)throw new TypeError("Factor may only be set to 1 or -1");this._innerValue.factor=T}get totalSeconds(){return this._innerValue.toSeconds()}set totalSeconds(T){this._modifyContent(),this._innerValue.fromSeconds(T)}compare(T){return this._innerValue.compare(T.toICALJs())}clone(){return m.fromICALJs(this._innerValue.clone())}static fromICALJs(T){return new m(T)}static fromData(T){const r=new t.default.UtcOffset;return r.fromData(T),m.fromICALJs(r)}static fromSeconds(T){const r=t.default.UtcOffset.fromSeconds(T);return m.fromICALJs(r)}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class h extends Error{}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @author Richard Steinmetz <richard@steinmetz.cloud>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */function B(T){switch(D(T)){case"binary":return c;case"date":case"date-time":return Y;case"duration":return d;case"period":return Z;case"recur":return I;case"utc-offset":return m;default:throw new h}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class g extends(u(A(class{}))){constructor(T,r=null,e=[],n=null,t=null){super(),this._name=s(T),this._value=r,this._parameters=new Map,this._root=n,this._parent=t,this._setParametersFromConstructor(e),r instanceof l&&r.subscribe((()=>this._notifySubscribers()))}get name(){return this._name}get value(){return this._value}set value(T){this._modifyContent(),this._value=T,T instanceof l&&T.subscribe((()=>this._notifySubscribers()))}get root(){return this._root}set root(T){this._modify(),this._root=T}get parent(){return this._parent}set parent(T){this._modify(),this._parent=T}getFirstValue(){return this.isMultiValue()?this.value.length>0?this.value[0]:null:this.value}*getValueIterator(){this.isMultiValue()?yield*this.value.slice()[Symbol.iterator]():yield this.value}addValue(T){if(!this.isMultiValue())throw new TypeError("This is not a multivalue property");this._modifyContent(),this.value.push(T)}hasValue(T){if(!this.isMultiValue())throw new TypeError("This is not a multivalue property");return this.value.includes(T)}removeValue(T){if(!this.hasValue(T))return;this._modifyContent();const r=this.value.indexOf(T);this.value.splice(r,1)}setParameter(T){this._modify(),this._parameters.set(T.name,T),T.subscribe((()=>this._notifySubscribers()))}getParameter(T){return this._parameters.get(s(T))}*getParametersIterator(){yield*this._parameters.values()}getParameterFirstValue(T){const r=this.getParameter(T);return r instanceof O?r.isMultiValue()?r.value[0]:r.value:null}hasParameter(T){return this._parameters.has(s(T))}deleteParameter(T){this._modify(),this._parameters.delete(s(T))}updateParameterIfExist(T,r){if(this._modify(),this.hasParameter(T)){this.getParameter(T).value=r}else{const e=new O(s(T),r);this.setParameter(e)}}isMultiValue(){return Array.isArray(this._value)}isDecoratedValue(){return this.isMultiValue()?this._value[0]instanceof l:this._value instanceof l}lock(){super.lock();for(const T of this.getParametersIterator())T.lock();if(this.isDecoratedValue())for(const T of this.getValueIterator())T.lock()}unlock(){super.unlock();for(const T of this.getParametersIterator())T.unlock();if(this.isDecoratedValue())for(const T of this.getValueIterator())T.unlock()}clone(){const T=[];for(const r of this.getParametersIterator())T.push(r.clone());return new this.constructor(this.name,this._cloneValue(),T,this.root,this.parent)}_cloneValue(){return this.isDecoratedValue()?this.isMultiValue()?this._value.map((T=>T.clone())):this._value.clone():this.isMultiValue()?this._value.slice():this._value}_setParametersFromConstructor(T){T.forEach((T=>{T instanceof O||(T=new O(T[0],T[1])),this.setParameter(T)}))}static fromICALJs(T,r=null,e=null){if(!(T instanceof t.default.Property))throw new E;let n;if(T.isDecorated){const r=B(T.getFirstValue().icaltype);n=T.isMultiValue?T.getValues().map((T=>r.fromICALJs(T))):r.fromICALJs(T.getFirstValue())}else n=T.isMultiValue?T.getValues():T.getFirstValue();const i=[];return Object.keys(Object.assign({},T.toJSON()[1])).forEach((r=>{"TZID"!==s(r)&&i.push([r,T.getParameter(r)])})),new this(T.name,n,i,r,e)}toICALJs(){const T=N(D(this.name));this.isMultiValue()?this.isDecoratedValue()?T.setValues(this.value.map((T=>T.toICALJs()))):T.setValues(this.value):this.isDecoratedValue()?T.setValue(this.value.toICALJs()):T.setValue(this.value);for(const r of this.getParametersIterator())T.setParameter(D(r.name),r.value);const r=this.getFirstValue();return r instanceof Y&&"floating"!==r.timezoneId&&"UTC"!==r.timezoneId&&!r.isDate&&T.setParameter("tzid",r.timezoneId),T}_modifyContent(){super._modifyContent(),this._notifySubscribers()}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class L extends g{get formatType(){return this.getParameterFirstValue("FMTTYPE")}set formatType(T){this.updateParameterIfExist("FMTTYPE",T)}get uri(){return this._value instanceof c?null:this._value}set uri(T){this.value=T}get encoding(){return this._value instanceof c?"BASE64":null}get data(){return this._value instanceof c?this._value.value:null}set data(T){this.value instanceof c?this.value.value=T:this.value=c.fromDecodedValue(T)}toICALJs(){const T=super.toICALJs();return this._value instanceof c&&T.setParameter("ENCODING","BASE64"),T}static fromData(T,r=null){const e=c.fromDecodedValue(T),n=new L("ATTACH",e);return r&&(n.formatType=r),n}static fromLink(T,r=null){const e=new L("ATTACH",T);return r&&(e.formatType=r),e}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class p extends g{get role(){const T=["CHAIR","REQ-PARTICIPANT","OPT-PARTICIPANT","NON-PARTICIPANT"];if(this.hasParameter("ROLE")){const r=this.getParameterFirstValue("ROLE");if(T.includes(r))return r}return"REQ-PARTICIPANT"}set role(T){this.updateParameterIfExist("ROLE",T)}get userType(){const T=["INDIVIDUAL","GROUP","RESOURCE","ROOM","UNKNOWN"];if(this.hasParameter("CUTYPE")){const r=this.getParameterFirstValue("CUTYPE");return T.includes(r)?r:"UNKNOWN"}return"INDIVIDUAL"}set userType(T){this.updateParameterIfExist("CUTYPE",T)}get rsvp(){if(this.hasParameter("RSVP")){return"TRUE"===s(this.getParameterFirstValue("RSVP"))}return!1}set rsvp(T){this.updateParameterIfExist("RSVP",T?"TRUE":"FALSE")}get commonName(){return this.getParameterFirstValue("CN")}set commonName(T){this.updateParameterIfExist("CN",T)}get participationStatus(){let T;T=this.parent?this.parent.name:"VEVENT";const r={VEVENT:["NEEDS-ACTION","ACCEPTED","DECLINED","TENTATIVE","DELEGATED"],VJOURNAL:["NEEDS-ACTION","ACCEPTED","DECLINED"],VTODO:["NEEDS-ACTION","ACCEPTED","DECLINED","TENTATIVE","DELEGATED","COMPLETED","IN-PROCESS"]};if(this.hasParameter("PARTSTAT")){const e=this.getParameterFirstValue("PARTSTAT");return r[T].includes(e)?e:"NEEDS-ACTION"}return"NEEDS-ACTION"}set participationStatus(T){this.updateParameterIfExist("PARTSTAT",T)}get language(){return this.getParameterFirstValue("LANGUAGE")}set language(T){this.updateParameterIfExist("LANGUAGE",T)}get email(){return this.value}set email(T){this.value=R(T,"mailto:")}isOrganizer(){return"ORGANIZER"===this._name}static fromNameAndEMail(T,r,e=!1){const n=e?"ORGANIZER":"ATTENDEE";return r=R(r,"mailto:"),new p(n,r,[["CN",T]])}static fromNameEMailRoleUserTypeAndRSVP(T,r,e,n,t,i=!1){const a=i?"ORGANIZER":"ATTENDEE";return r=R(r,"mailto:"),new p(a,r,[["CN",T],["ROLE",e],["CUTYPE",n],["RSVP",t?"TRUE":"FALSE"]])}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */t.default.design.icalendar.property.conference={defaultType:"uri"},t.default.design.icalendar.param.feature={valueType:"cal-address",multiValue:","};class G extends g{*getFeatureIterator(){if(!this.hasParameter("FEATURE"))return;const T=this.getParameter("FEATURE");yield*T.getValueIterator()}listAllFeatures(){return this.hasParameter("FEATURE")?this.getParameter("FEATURE").value.slice():[]}addFeature(T){if(this._modify(),this.hasParameter("FEATURE")){if(this.hasFeature(T))return;this.getParameter("FEATURE").value.push(T)}else this.updateParameterIfExist("FEATURE",[T])}removeFeature(T){if(this._modify(),!this.hasFeature(T))return;const r=this.getParameter("FEATURE"),e=r.value.indexOf(T);r.value.splice(e,1)}clearAllFeatures(){this.deleteParameter("FEATURE")}hasFeature(T){if(!this.hasParameter("FEATURE"))return!1;const r=this.getParameter("FEATURE");return!!Array.isArray(r.value)&&r.value.includes(T)}get label(){return this.getParameterFirstValue("LABEL")}set label(T){this.updateParameterIfExist("LABEL",T)}get uri(){return this.value}set uri(T){this.value=T}toICALJs(){const T=super.toICALJs();return T.setParameter("value","URI"),T}static fromURILabelAndFeatures(T,r=null,e=null){const n=new G("CONFERENCE",T);return r&&n.updateParameterIfExist("label",r),e&&n.updateParameterIfExist("feature",e),n}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class f extends g{get type(){const T=["FREE","BUSY","BUSY-UNAVAILABLE","BUSY-TENTATIVE"];if(this.hasParameter("FBTYPE")){const r=this.getParameterFirstValue("FBTYPE");if(T.includes(r))return r}return"BUSY"}set type(T){this.updateParameterIfExist("FBTYPE",T)}static fromPeriodAndType(T,r){return new f("FREEBUSY",T,[["fbtype",r]])}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class U extends g{constructor(T,r=[0,0],e=[],n=null,t=null){super(T,r,e,n,t)}get latitude(){return this._value[0]}set latitude(T){this._modifyContent(),"number"!=typeof T&&(T=parseFloat(T)),this._value[0]=T}get longitude(){return this._value[1]}set longitude(T){this._modifyContent(),"number"!=typeof T&&(T=parseFloat(T)),this._value[1]=T}toICALJs(){const T=N(D(this.name));return T.setValue(this.value),this._parameters.forEach((r=>{T.setParameter(D(r.name),r.value)})),T}static fromPosition(T,r){return new U("GEO",[T,r])}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class _ extends L{get display(){return this.getParameterFirstValue("DISPLAY")||"BADGE"}set display(T){this.updateParameterIfExist("DISPLAY",T)}static fromData(T,r=null,e=null){const n=c.fromDecodedValue(T),t=new _("IMAGE",n);return r&&(t.display=r),e&&(t.formatType=e),t}static fromLink(T,r=null,e=null){const n=new _("IMAGE",T);return r&&(n.display=r),e&&(n.formatType=e),n}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class y extends g{get relationType(){const T=["PARENT","CHILD","SIBLING"],r="PARENT";if(this.hasParameter("RELTYPE")){const e=this.getParameterFirstValue("RELTYPE");return T.includes(e)?e:r}return r}set relationType(T){this.updateParameterIfExist("RELTYPE",T)}get relatedId(){return this.value}set relatedId(T){this.value=T}static fromRelTypeAndId(T,r){return new y("RELATED-TO",r,[["RELTYPE",T]])}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class C extends g{constructor(T,r=["1","Pending"],e=[],n=null,t=null){super(T,r,e,n,t)}get statusCode(){return parseFloat(this.value[0])}set statusCode(T){this._modifyContent(),this.value[0]=T.toString(),T===Math.floor(T)&&(this.value[0]+=".0")}get statusMessage(){return this.value[1]}set statusMessage(T){this._modifyContent(),this.value[1]=T}get exceptionData(){return this.value[2]?this.value[2]:null}set exceptionData(T){this._modifyContent(),this.value[2]=T}isPending(){return this.statusCode>=1&&this.statusCode<2}isSuccessful(){return this.statusCode>=2&&this.statusCode<3}isClientError(){return this.statusCode>=3&&this.statusCode<4}isSchedulingError(){return this.statusCode>=4&&this.statusCode<5}toICALJs(){const T=N(D(this.name));return T.setValue(this.value),this._parameters.forEach((r=>{T.setParameter(D(r.name),r.value)})),T}static fromCodeAndMessage(T,r){return new C("REQUEST-STATUS",[T.toString(),r])}}C.SUCCESS=[2,"Success"],C.SUCCESS_FALLBACK=[2.1,"Success, but fallback taken on one or more property values."],C.SUCCESS_PROP_IGNORED=[2.2,"Success; invalid property ignored."],C.SUCCESS_PROPPARAM_IGNORED=[2.3,"Success; invalid property parameter ignored."],C.SUCCESS_NONSTANDARD_PROP_IGNORED=[2.4,"Success; unknown, non-standard property ignored."],C.SUCCESS_NONSTANDARD_PROPPARAM_IGNORED=[2.5,"Success; unknown, non-standard property value ignored."],C.SUCCESS_COMP_IGNORED=[2.6,"Success; invalid calendar component ignored."],C.SUCCESS_FORWARDED=[2.7,"Success; request forwarded to Calendar User."],C.SUCCESS_REPEATING_IGNORED=[2.8,"Success; repeating event ignored. Scheduled as a single component."],C.SUCCESS_TRUNCATED_END=[2.9,"Success; truncated end date time to date boundary."],C.SUCCESS_REPEATING_VTODO_IGNORED=[2.1,"Success; repeating VTODO ignored.  Scheduled as a single VTODO."],C.SUCCESS_UNBOUND_RRULE_CLIPPED=[2.11,"Success; unbounded RRULE clipped at some finite number of instances."],C.CLIENT_INVALID_PROPNAME=[3,"Invalid property name."],C.CLIENT_INVALID_PROPVALUE=[3.1,"Invalid property value."],C.CLIENT_INVALID_PROPPARAM=[3.2,"Invalid property parameter."],C.CLIENT_INVALID_PROPPARAMVALUE=[3.3,"Invalid property parameter value."],C.CLIENT_INVALUD_CALENDAR_COMP_SEQ=[3.4,"Invalid calendar component sequence."],C.CLIENT_INVALID_DATE_TIME=[3.5,"Invalid date or time."],C.CLIENT_INVALID_RRULE=[3.6,"Invalid rule."],C.CLIENT_INVALID_CU=[3.7,"Invalid Calendar User."],C.CLIENT_NO_AUTHORITY=[3.8,"No authority."],C.CLIENT_UNSUPPORTED_VERSION=[3.9,"Unsupported version."],C.CLIENT_TOO_LARGE=[3.1,"Request entity too large."],C.CLIENT_REQUIRED_COMP_OR_PROP_MISSING=[3.11,"Required component or property missing."],C.CLIENT_UNKNOWN_COMP_OR_PROP=[3.12,"Unknown component or property found."],C.CLIENT_UNSUPPORTED_COMP_OR_PROP=[3.13,"Unsupported component or property found."],C.CLIENT_UNSUPPORTED_CAPABILITY=[3.14,"Unsupported capability."],C.SCHEDULING_EVENT_CONFLICT=[4,"Event conflict.  Date/time is busy."],C.SERVER_REQUEST_NOT_SUPPORTED=[5,"Request not supported."],C.SERVER_SERVICE_UNAVAILABLE=[5.1,"Service unavailable."],C.SERVER_INVALID_CALENDAR_SERVICE=[5.2,"Invalid calendar service."],C.SERVER_NO_SCHEDULING_FOR_USER=[5.3,"No scheduling support for user."];
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */
class H extends g{get alternateText(){return this.getParameterFirstValue("ALTREP")}set alternateText(T){this.updateParameterIfExist("ALTREP",T)}get language(){return this.getParameterFirstValue("LANGUAGE")}set language(T){this.updateParameterIfExist("LANGUAGE",T)}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class P extends g{get related(){return this.hasParameter("RELATED")?this.getParameterFirstValue("RELATED"):"START"}set related(T){this.updateParameterIfExist("RELATED",T)}get value(){return super.value}set value(T){super.value=T,T instanceof Y&&(this.deleteParameter("RELATED"),super.value=T.getInUTC())}isRelative(){return this.getFirstValue()instanceof d}static fromAbsolute(T){return new P("TRIGGER",T.getInUTC())}static fromRelativeAndRelated(T,r=!0){return new P("TRIGGER",T,[["RELATED",r?"START":"END"]])}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @author Richard Steinmetz <richard@steinmetz.cloud>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */function V(T){switch(s(T)){case"ATTACH":return L;case"ATTENDEE":case"ORGANIZER":return p;case"CONFERENCE":return G;case"FREEBUSY":return f;case"GEO":return U;case"IMAGE":return _;case"RELATED-TO":return y;case"REQUEST-STATUS":return C;case"TRIGGER":return P;case"COMMENT":case"CONTACT":case"DESCRIPTION":case"LOCATION":case"SUMMARY":return H;default:return g}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class Q extends(u(A(class{}))){constructor(T,r=[],e=[],n=null,t=null){super(),this._name=s(T),this._properties=new Map,this._components=new Map,this._root=n,this._parent=t,this._setPropertiesFromConstructor(r),this._setComponentsFromConstructor(e)}get name(){return this._name}get root(){return this._root}set root(T){this._modify(),this._root=T;for(const r of this.getPropertyIterator())r.root=T;for(const r of this.getComponentIterator())r.root=T}get parent(){return this._parent}set parent(T){this._modify(),this._parent=T}getFirstProperty(T){return this._properties.has(s(T))?this._properties.get(s(T))[0]:null}getFirstPropertyFirstValue(T){const r=this.getFirstProperty(T);return r?r.getFirstValue():null}updatePropertyWithValue(T,r){this._modify();const e=this.getFirstProperty(T);if(e)e.value=r;else{const e=new(V(T))(T,r,[],this,this.root);this.addProperty(e)}}*getPropertyIterator(T=null){if(T){if(!this.hasProperty(T))return;yield*this._properties.get(s(T)).slice()[Symbol.iterator]()}else for(const T of this._properties.keys())yield*this.getPropertyIterator(T)}*_getAllOfPropertyByLang(T,r){for(const e of this.getPropertyIterator(T))e.getParameterFirstValue("LANGUAGE")===r&&(yield e)}_getFirstOfPropertyByLang(T,r){return this._getAllOfPropertyByLang(T,r).next().value||null}addProperty(T){if(this._modify(),T.root=this.root,T.parent=this,this._properties.has(T.name)){const r=this._properties.get(T.name);if(-1!==r.indexOf(T))return!1;r.push(T)}else this._properties.set(T.name,[T]);return T.subscribe((()=>this._notifySubscribers())),!0}hasProperty(T){return this._properties.has(s(T))}deleteProperty(T){if(this._modify(),!this._properties.has(T.name))return!1;const r=this._properties.get(T.name),e=r.indexOf(T);return-1!==e&&(-1!==e&&1===r.length?this._properties.delete(T.name):r.splice(e,1),!0)}deleteAllProperties(T){return this._modify(),this._properties.delete(s(T))}getFirstComponent(T){return this.hasComponent(T)?this._components.get(s(T))[0]:null}*getComponentIterator(T){if(T){if(!this.hasComponent(T))return;yield*this._components.get(s(T)).slice()[Symbol.iterator]()}else for(const T of this._components.keys())yield*this.getComponentIterator(T)}addComponent(T){if(this._modify(),T.root=this.root,T.parent=this,this._components.has(T.name)){const r=this._components.get(T.name);if(-1!==r.indexOf(T))return!1;r.push(T)}else this._components.set(T.name,[T]);return T.subscribe((()=>this._notifySubscribers())),!0}hasComponent(T){return this._components.has(s(T))}deleteComponent(T){if(this._modify(),!this._components.has(T.name))return!1;const r=this._components.get(T.name),e=r.indexOf(T);return-1!==e&&(-1!==e&&1===r.length?this._components.delete(T.name):r.splice(e,1),!0)}deleteAllComponents(T){return this._modify(),this._components.delete(s(T))}lock(){super.lock();for(const T of this.getPropertyIterator())T.lock();for(const T of this.getComponentIterator())T.lock()}unlock(){super.unlock();for(const T of this.getPropertyIterator())T.unlock();for(const T of this.getComponentIterator())T.unlock()}clone(){const T=[];for(const r of this.getPropertyIterator())T.push(r.clone());const r=[];for(const T of this.getComponentIterator())r.push(T.clone());return new this.constructor(this.name,T,r,this.root,this.parent)}_setPropertiesFromConstructor(T){for(let r of T){if(Array.isArray(r)){r=new(V(r[0]))(r[0],r[1])}this.addProperty(r)}}_setComponentsFromConstructor(T){for(const r of T)this.addComponent(r)}static fromICALJs(T,r=null,e=null){if(!(T instanceof t.default.Component))throw new E;const n=new this(T.name,[],[],r,e);for(const e of T.getAllProperties()){const T=V(e.name).fromICALJs(e,r,n);n.addProperty(T)}for(const e of T.getAllSubcomponents()){const T=this._getConstructorForComponentName(e.name).fromICALJs(e,r,n);n.addComponent(T)}return n}static _getConstructorForComponentName(T){return Q}toICALJs(){const T=(r=D(this.name),new t.default.Component(D(r)));var r;for(const r of this.getPropertyIterator())T.addProperty(r.toICALJs());for(const r of this.getComponentIterator())T.addSubcomponent(r.toICALJs());return T}}function v(T,r,e=!0){r=function(T){"string"==typeof T&&(T={name:T});return Object.assign({},{iCalendarName:s(T.name),pluralName:T.name+"s",allowedValues:null,defaultValue:null,unknownValue:null},T)}(r),Object.defineProperty(T,r.name,{get(){const T=this.getFirstPropertyFirstValue(r.iCalendarName);return T?Array.isArray(r.allowedValues)&&!r.allowedValues.includes(T)?r.unknownValue:T:r.defaultValue},set(T){if(this._modify(),null!==T){if(Array.isArray(r.allowedValues)&&!r.allowedValues.includes(T))throw new TypeError("Illegal value");this.updatePropertyWithValue(r.iCalendarName,T)}else this.deleteAllProperties(r.iCalendarName)}})}function b(T,r){T["get"+o((r=x(r)).name)+"Iterator"]=function*(){yield*this.getPropertyIterator(r.iCalendarName)},T["get"+o(r.name)+"List"]=function(){return Array.from(this["get"+o(r.name)+"Iterator"]())},T["remove"+o(r.name)]=function(T){this.deleteProperty(T)},T["clearAll"+o(r.pluralName)]=function(){this.deleteAllProperties(r.iCalendarName)}}function w(T,r){T["get"+o((r=x(r)).name)+"Iterator"]=function*(T=null){for(const e of this._getAllOfPropertyByLang(r.iCalendarName,T))yield*e.getValueIterator()},T["get"+o(r.name)+"List"]=function(T=null){return Array.from(this["get"+o(r.name)+"Iterator"](T))},T["add"+o(r.name)]=function(T,e=null){const n=this._getFirstOfPropertyByLang(r.iCalendarName,e);if(n)n.addValue(T);else{const n=new g(r.iCalendarName,[T]);if(e){const T=new O("LANGUAGE",e);n.setParameter(T)}this.addProperty(n)}},T["remove"+o(r.name)]=function(T,e=null){for(const n of this._getAllOfPropertyByLang(r.iCalendarName,e))if(n.isMultiValue()&&n.hasValue(T))return 1===n.value.length?(this.deleteProperty(n),!0):(n.removeValue(T),!0);return!1},T["clearAll"+o(r.pluralName)]=function(T=null){for(const e of this._getAllOfPropertyByLang(r.iCalendarName,T))this.deleteProperty(e)}}function x(T){return"string"==typeof T&&(T={name:T}),Object.assign({},{iCalendarName:s(T.name),pluralName:T.name+"s"},T)}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */
function k(){return new Date}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class z extends Error{}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class J{constructor(T){this._masterItem=T,this._recurrenceExceptionItems=new Map,this._rangeRecurrenceExceptionItemsIndex=[],this._rangeRecurrenceExceptionItemsDiffCache=new Map,this._rangeRecurrenceExceptionItems=new Map}get masterItem(){return this._masterItem}set masterItem(T){this._masterItem=T}*getRecurrenceExceptionIterator(){yield*this._recurrenceExceptionItems.values()}getRecurrenceExceptionList(){return Array.from(this.getRecurrenceExceptionIterator())}hasRecurrenceExceptionForId(T){return T instanceof Y?T=T.unixTime:T instanceof t.default.Time&&(T=T.toUnixTime()),this._recurrenceExceptionItems.has(T)}getRecurrenceException(T){return T instanceof Y?T=T.unixTime:T instanceof t.default.Time&&(T=T.toUnixTime()),this._recurrenceExceptionItems.get(T)||null}hasRangeRecurrenceExceptionForId(T){return T instanceof Y?T=T.unixTime:T instanceof t.default.Time&&(T=T.toUnixTime()),0!==this._rangeRecurrenceExceptionItemsIndex.length&&this._rangeRecurrenceExceptionItemsIndex[0]<T}getRangeRecurrenceExceptionForId(T){T instanceof Y?T=T.unixTime:T instanceof t.default.Time&&(T=T.toUnixTime());const r=t.default.helpers.binsearchInsert(this._rangeRecurrenceExceptionItemsIndex,T,((T,r)=>T-r));if(0===r)return null;const e=this._rangeRecurrenceExceptionItemsIndex[r-1];return this._rangeRecurrenceExceptionItems.get(e)}getRangeRecurrenceExceptionDiff(T){if(T instanceof Y?T=T.unixTime:T instanceof t.default.Time&&(T=T.toUnixTime()),this._rangeRecurrenceExceptionItemsDiffCache.has(T))return this._rangeRecurrenceExceptionItemsDiffCache.get(T);const r=this.getRangeRecurrenceExceptionForId(T);if(!r)return null;const e=r.recurrenceId,n=r.startDate.subtractDateWithTimezone(e);return n.lock(),this._rangeRecurrenceExceptionItemsDiffCache.set(T,n),n}relateRecurrenceException(T){this._modify();const r=this._getRecurrenceIdKey(T);if(this._recurrenceExceptionItems.set(r,T),T.modifiesFuture()){this._rangeRecurrenceExceptionItems.set(r,T);const e=t.default.helpers.binsearchInsert(this._rangeRecurrenceExceptionItemsIndex,r,((T,r)=>T-r));this._rangeRecurrenceExceptionItemsIndex.splice(e,0,r)}T.recurrenceManager=this}removeRecurrenceException(T){const r=this._getRecurrenceIdKey(T);this.removeRecurrenceExceptionByRecurrenceId(r)}removeRecurrenceExceptionByRecurrenceId(T){this._modify(),this._recurrenceExceptionItems.delete(T),this._rangeRecurrenceExceptionItems.delete(T),this._rangeRecurrenceExceptionItemsDiffCache.delete(T);const r=this._rangeRecurrenceExceptionItemsIndex.indexOf(T);-1!==r&&this._rangeRecurrenceExceptionItemsIndex.splice(r,1)}_getRecurrenceIdKey(T){return T.recurrenceId.unixTime}*getRecurrenceRuleIterator(){for(const T of this._masterItem.getPropertyIterator("RRULE"))yield T.getFirstValue()}getRecurrenceRuleList(){return Array.from(this.getRecurrenceRuleIterator())}addRecurrenceRule(T){this._modify(),this.resetCache();const r=new g("RRULE",T);this._masterItem.addProperty(r)}removeRecurrenceRule(T){this._modify(),this.resetCache();for(const r of this._masterItem.getPropertyIterator("RRULE"))r.getFirstValue()===T&&this._masterItem.deleteProperty(r)}clearAllRecurrenceRules(){this._modify(),this.resetCache(),this._masterItem.deleteAllProperties("RRULE")}*getRecurrenceDateIterator(T=!1,r=null){for(const e of this._getPropertiesForRecurrenceDate(T,r))yield*e.getValueIterator()}listAllRecurrenceDates(T=!1,r=null){return Array.from(this.getRecurrenceDateIterator(T,r))}addRecurrenceDate(T=!1,r){this._modify(),this.resetCache();let e=null;r instanceof Y&&!r.isDate&&(e=r.timezoneId);const n=this._getValueTypeByValue(r),t=this._getPropertiesForRecurrenceDate(T,n,e).next.value;if(t instanceof g){t.value.push(r),this.masterItem.markPropertyAsDirty(T?"EXDATE":"RDATE")}else{const e=this._getPropertyNameByIsNegative(T),n=new g(e,r);this._masterItem.addProperty(n)}}hasRecurrenceDate(T=!1,r){for(let e of this.getRecurrenceDateIterator(T))if(e instanceof Z&&(e=e.start),0===e.compare(r))return!0;return!1}getRecurrenceDate(T=!1,r){for(const e of this.getRecurrenceDateIterator(T)){let T=e;if(T instanceof Z&&(T=T.start),0===T.compare(r))return e}return null}removeRecurrenceDate(T=!1,r){this._modify(),this.resetCache();const e=this._getValueTypeByValue(r);for(const n of this._getPropertiesForRecurrenceDate(T,e))for(const e of n.getValueIterator())if(r===e){const e=n.value;if(1===e.length){this.masterItem.deleteProperty(n);continue}const t=e.indexOf(r);e.splice(t,1),this.masterItem.markPropertyAsDirty(T?"EXDATE":"RDATE")}}clearAllRecurrenceDates(T=!1,r=null){this._modify(),this.resetCache();for(const e of this._getPropertiesForRecurrenceDate(T,r))this._masterItem.deleteProperty(e)}_getPropertyNameByIsNegative(T){return T?"EXDATE":"RDATE"}_getValueTypeByValue(T){return T instanceof Z?"PERIOD":T.isDate?"DATE":"DATETIME"}*_getPropertiesForRecurrenceDate(T,r,e=null){const n=this._getPropertyNameByIsNegative(T);for(const T of this._masterItem.getPropertyIterator(n))null===r||"PERIOD"===s(r)&&T.getFirstValue()instanceof Z||"DATE"===s(r)&&T.getFirstValue().isDate?yield T:"DATETIME"!==s(r)||T.getFirstValue().isDate||null!==e&&T.getFirstValue().timezoneId!==e||(yield T)}isFinite(){return this.getRecurrenceRuleList().every((T=>T.isFinite()))}isEmptyRecurrenceSet(){return void 0===this._getRecurExpansionObject().next()}getOccurrenceAtExactly(T){if(!this.masterItem.isRecurring())return 0===this.masterItem.getReferenceRecurrenceId().compare(T)?this.masterItem:null;const r=this._getRecurExpansionObject(),e=T.toICALJs();let n;for(;n=r.next();){if(0===n.compare(e))return this._getOccurrenceAtRecurrenceId(Y.fromICALJs(n));if(1===n.compare(e))return null}return null}getClosestOccurrence(T){if(!this.masterItem.isRecurring())return this.masterItem;const r=this._getRecurExpansionObject();T=T.toICALJs();let e,n=null;for(;e=r.next();){if(-1!==e.compare(T)){const T=Y.fromICALJs(e);return this._getOccurrenceAtRecurrenceId(T)}n=e}const t=Y.fromICALJs(n);return this._getOccurrenceAtRecurrenceId(t)}*getAllOccurrencesBetweenIterator(T,r){if(!this.masterItem.isRecurring())return"function"!=typeof this.masterItem.isInTimeFrame&&(yield this.masterItem),void(this.masterItem.isInTimeFrame(T,r)&&(yield this.masterItem));const e=this._getRecurExpansionObject(),n=T.toICALJs(),t=r.toICALJs(),i=Array.from(this._recurrenceExceptionItems.keys()),a=Math.max.apply(Math,i);let A;for(;A=e.next();){const e=Y.fromICALJs(A),i=this._getOccurrenceAtRecurrenceId(e);let E=null;switch(s(i.name)){case"VEVENT":case"VTODO":E=i.endDate.toICALJs();break;case"VJOURNAL":default:E=A}if(-1===E.compare(n))continue;const D=i.startDate.toICALJs();if(i.isRecurrenceException()&&!i.modifiesFuture()||1!==D.compare(t))"function"!=typeof i.isInTimeFrame&&(yield i),i.isInTimeFrame(T,r)&&(yield i);else{if(0===this._recurrenceExceptionItems.size)break;if(A.toUnixTime()>a)break}}}getAllOccurrencesBetween(T,r){return Array.from(this.getAllOccurrencesBetweenIterator(T,r))}updateUID(T){this._masterItem.updatePropertyWithValue("UID",T);for(const r of this.getRecurrenceExceptionIterator())r.updatePropertyWithValue("UID",T)}updateStartDateOfMasterItem(T,r){const e=T.subtractDateWithTimezone(r);for(const T of this.getRecurrenceDateIterator(!0))this.hasRecurrenceDate(!1,T)||T.addDuration(e);for(const T of this.getRecurrenceExceptionIterator())this.hasRecurrenceDate(!1,T.recurrenceId)||(this.removeRecurrenceException(T),T.recurrenceId.addDuration(e),this.relateRecurrenceException(T));for(const T of this.getRecurrenceRuleIterator())T.until&&T.until.addDuration(e)}_getOccurrenceAtRecurrenceId(T){if(this.hasRecurrenceExceptionForId(T)){const r=this.getRecurrenceException(T);return r.canCreateRecurrenceExceptions()?r.forkItem(T):r}if(this.hasRangeRecurrenceExceptionForId(T)){const r=this.getRangeRecurrenceExceptionForId(T),e=this.getRangeRecurrenceExceptionDiff(T);return r.forkItem(T,e)}return 0===T.compare(this._masterItem.startDate)?this._masterItem.canCreateRecurrenceExceptions()?this._masterItem.forkItem(T):this._masterItem:this._masterItem.forkItem(T)}resetCache(){}_getRecurExpansionObject(){if(null===this._masterItem.startDate)throw new z;const T=this._masterItem.startDate.toICALJs();let r=T.clone();const e=[];let n;const i=[];let a=null;const A=[];for(const r of this.getRecurrenceRuleIterator())e.push(r.toICALJs().iterator(T)),e[e.length-1].next();for(let T of this.getRecurrenceDateIterator()){T instanceof Z&&(T=T.start),T=T.toICALJs();const r=t.default.helpers.binsearchInsert(i,T,((T,r)=>T.compare(r)));i.splice(r,0,T)}i.length>0&&-1===i[0].compare(T)?(n=0,r=i[0].clone()):(n=t.default.helpers.binsearchInsert(i,T,((T,r)=>T.compare(r))),a=A[n]);for(let T of this.getRecurrenceDateIterator(!0)){T=T.toICALJs();const r=t.default.helpers.binsearchInsert(A,T,((T,r)=>T.compare(r)));A.splice(r,0,T)}const E=t.default.helpers.binsearchInsert(A,T,((T,r)=>T.compare(r))),D=A[E];return new t.default.RecurExpansion({dtstart:T,last:r,ruleIterators:e,ruleDateInc:n,exDateInc:E,ruleDates:i,ruleDate:a,exDates:A,exDate:D,complete:!1})}_modify(){if(this._masterItem.isLocked())throw new a}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class W extends Q{toTimezone(){return new K(this.toICALJs())}}v(W.prototype,{name:"timezoneId",iCalendarName:"tzid"});
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */
class K{constructor(T,r){this._timezoneId=null,this._ics=null,this._innerValue=null,this._initialized=!1,T instanceof t.default.Timezone?(this._innerValue=T,this._initialized=!0):T instanceof t.default.Component?(this._innerValue=new t.default.Timezone(T),this._initialized=!0):(this._timezoneId=T,this._ics=r)}get timezoneId(){return this._initialized?this._innerValue.tzid:this._timezoneId}offsetForArray(T,r,e,n,i,a){this._initialize();const A=new t.default.Time({year:T,month:r,day:e,hour:n,minute:i,second:a,isDate:!1});return this._innerValue.utcOffset(A)}timestampToArray(T){this._initialize();const r=t.default.Time.fromData({year:1970,month:1,day:1,hour:0,minute:0,second:0});r.fromUnixTime(Math.floor(T/1e3));const e=r.convertToZone(this._innerValue);return[e.year,e.month,e.day,e.hour,e.minute,e.second]}toTimezoneComponent(){return W.fromICALJs(this.toICALJs())}toICALTimezone(){return this._initialize(),this._innerValue}toICALJs(){return this._initialize(),this._innerValue.component}_initialize(){if(!this._initialized){const T=t.default.parse(this._ics),r=new t.default.Component(T);this._innerValue=new t.default.Timezone(r),this._initialized=!0}}}K.utc=new K(t.default.Timezone.utcTimezone),K.floating=new K(t.default.Timezone.localTimezone);
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */
class j extends Q{addAttendeeFromNameAndEMail(T,r){const e=p.fromNameAndEMail(T,r);return this.addProperty(e)}get trigger(){return this.getFirstProperty("TRIGGER")}setTriggerFromAbsolute(T){const r=P.fromAbsolute(T);this.deleteAllProperties("TRIGGER"),this.addProperty(r)}setTriggerFromRelative(T,r=!0){const e=P.fromRelativeAndRelated(T,r);this.deleteAllProperties("TRIGGER"),this.addProperty(e)}}v(j.prototype,"action"),v(j.prototype,"description"),v(j.prototype,"summary"),v(j.prototype,"duration"),v(j.prototype,"repeat"),v(j.prototype,{name:"attachment",iCalendarName:"ATTACH"}),b(j.prototype,"attendee");
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */
class q extends Q{constructor(...T){super(...T),this._primaryItem=null,this._isExactForkOfPrimary=!1,this._originalRecurrenceId=null,this._recurrenceManager=null,this._dirty=!1,this._significantChange=!1,this._cachedId=null}get primaryItem(){return this._primaryItem}set primaryItem(T){this._modify(),this._primaryItem=T}get isExactForkOfPrimary(){return this._isExactForkOfPrimary}set isExactForkOfPrimary(T){this._isExactForkOfPrimary=T}get originalRecurrenceId(){return this._originalRecurrenceId}set originalRecurrenceId(T){this._originalRecurrenceId=T}get recurrenceManager(){return this._recurrenceManager}set recurrenceManager(T){this._recurrenceManager=T}get masterItem(){return this.recurrenceManager.masterItem}isMasterItem(){return this.masterItem===this}get id(){return this._cachedId?this._cachedId:null===this.startDate?(this._cachedId=encodeURIComponent(this.uid),this._cachedId):(this._cachedId=[encodeURIComponent(this.uid),encodeURIComponent(this.getReferenceRecurrenceId().unixTime.toString())].join("###"),this._cachedId)}get uid(){return this.getFirstPropertyFirstValue("UID")}set uid(T){this._recurrenceManager.updateUID(T)}get startDate(){return this.getFirstPropertyFirstValue("dtstart")}set startDate(T){const r=this.startDate;this.updatePropertyWithValue("dtstart",T),this.isMasterItem()&&this._recurrenceManager.updateStartDateOfMasterItem(T,r)}isPartOfRecurrenceSet(){return this.masterItem.isRecurring()}isRecurring(){return this.hasProperty("RRULE")||this.hasProperty("RDATE")}isRecurrenceException(){return this.hasProperty("RECURRENCE-ID")}modifiesFuture(){if(!this.isRecurrenceException())return!1;return"THISANDFUTURE"===this.getFirstProperty("RECURRENCE-ID").getParameterFirstValue("RANGE")}forkItem(T,r=null){const e=this.clone();if(e.recurrenceManager=this.recurrenceManager,e.primaryItem=this,0===e.getReferenceRecurrenceId().compare(T)&&(e.isExactForkOfPrimary=!0),!e.hasProperty("DTSTART"))throw new TypeError("Can't fork item without a DTSTART");if(e.getFirstPropertyFirstValue("DTSTART").timezoneId!==T.timezoneId){const r=e.getFirstPropertyFirstValue("DTSTART").getICALTimezone();T=T.getInICALTimezone(r)}e.originalRecurrenceId=T.clone();const n=e.getFirstPropertyFirstValue("DTSTART");let t,i=null;if(this._recurrenceManager.hasRecurrenceDate(!1,T)){const r=this._recurrenceManager.getRecurrenceDate(!1,T);r instanceof Z&&(i=r)}if(e.hasProperty("DTEND")){t=e.getFirstPropertyFirstValue("DTEND").subtractDateWithTimezone(n)}else if(e.hasProperty("DUE")){t=e.getFirstPropertyFirstValue("DUE").subtractDateWithTimezone(n)}if(!e.isRecurrenceException()||!e.isExactForkOfPrimary){if(e.updatePropertyWithValue("DTSTART",T.clone()),r&&e.startDate.addDuration(r),e.hasProperty("DTEND")){const T=e.startDate.clone();T.addDuration(t),e.updatePropertyWithValue("DTEND",T)}else if(e.hasProperty("DUE")){const T=e.startDate.clone();T.addDuration(t),e.updatePropertyWithValue("DUE",T)}i&&(e.deleteAllProperties("DTEND"),e.deleteAllProperties("DURATION"),e.updatePropertyWithValue("DTEND",i.end.clone()))}return e.resetDirty(),e}canCreateRecurrenceExceptions(){let T=!1;return this.primaryItem&&this.primaryItem.isRecurring()&&(T=!0),this.isRecurring()||this.modifiesFuture()||!this.isRecurring()&&T}createRecurrenceException(T=!1){if(!this.canCreateRecurrenceExceptions())throw new Error("Can't create recurrence-exceptions for non-recurring items");const r=this.primaryItem;if(T){if(this.isExactForkOfPrimary&&this.primaryItem.isMasterItem())return this._overridePrimaryItem(),[this,this];this.removeThisOccurrence(!0),this.recurrenceManager=new J(this),this._originalRecurrenceId=null,this.primaryItem=this,this.updatePropertyWithValue("UID",e.v4()),this._cachedId=null,this.addRelation("SIBLING",r.uid),r.addRelation("SIBLING",this.uid),this.deleteAllProperties("RECURRENCE-ID"),this.deleteAllProperties("RDATE"),this.deleteAllProperties("EXDATE"),this.updatePropertyWithValue("CREATED",Y.fromJSDate(k(),!0)),this.updatePropertyWithValue("DTSTAMP",Y.fromJSDate(k(),!0)),this.updatePropertyWithValue("LAST-MODIFIED",Y.fromJSDate(k(),!0)),this.updatePropertyWithValue("SEQUENCE",0),this._significantChange=!1,this._dirty=!1,this.root=this.root.constructor.fromEmpty(),this.root.addComponent(this),this.parent=this.root;for(const T of this.getAttendeeIterator())T.rsvp=!0}else{if(this.deleteAllProperties("RECURRENCE-ID"),this.recurrenceId=this.getReferenceRecurrenceId().clone(),this.root.addComponent(this),this.recurrenceManager.relateRecurrenceException(this),this.primaryItem=this,this.deleteAllProperties("RDATE"),this.deleteAllProperties("RRULE"),this.deleteAllProperties("EXDATE"),this.updatePropertyWithValue("CREATED",Y.fromJSDate(k(),!0)),this.updatePropertyWithValue("DTSTAMP",Y.fromJSDate(k(),!0)),this.updatePropertyWithValue("LAST-MODIFIED",Y.fromJSDate(k(),!0)),this.updatePropertyWithValue("SEQUENCE",0),this.recurrenceManager.hasRecurrenceDate(!1,this.getReferenceRecurrenceId())){const T=this.recurrenceManager.getRecurrenceDate(!1,this.getReferenceRecurrenceId());if(T instanceof Z){const r=T.start;this.recurrenceManager.removeRecurrenceDate(!1,T),this.recurrenceManager.addRecurrenceDate(!1,r)}}this.originalRecurrenceId=null}return[r,this]}removeThisOccurrence(T=!1){if(!this.isPartOfRecurrenceSet())return!0;if(T){const T=this.getReferenceRecurrenceId().clone(),r=T.getInTimezone(K.utc);r.addDuration(d.fromSeconds(-1));for(const T of this.recurrenceManager.getRecurrenceRuleIterator())T.until=r.clone();for(const r of this.recurrenceManager.getRecurrenceDateIterator()){let e=r;r instanceof Z&&(e=e.start),T.compare(e)<=0&&this.recurrenceManager.removeRecurrenceDate(!1,r)}for(const r of this.recurrenceManager.getRecurrenceDateIterator(!0))T.compare(r)<=0&&this.recurrenceManager.removeRecurrenceDate(!0,r);for(const r of this.recurrenceManager.getRecurrenceExceptionList())T.compare(r.recurrenceId)<=0&&(this.root.deleteComponent(r),this.recurrenceManager.removeRecurrenceException(r))}else if(this.isRecurrenceException()&&!this.modifiesFuture()&&(this.root.deleteComponent(this),this.recurrenceManager.removeRecurrenceException(this)),this.recurrenceManager.hasRecurrenceDate(!1,this.getReferenceRecurrenceId())){const T=this.recurrenceManager.getRecurrenceDate(!1,this.getReferenceRecurrenceId());this.recurrenceManager.removeRecurrenceDate(!1,T)}else this.recurrenceManager.addRecurrenceDate(!0,this.getReferenceRecurrenceId().clone());return this.recurrenceManager.isEmptyRecurrenceSet()}clone(){const T=super.clone();return T.resetDirty(),T}_addAttendee(T){for(const r of this.getAttendeeIterator())if(r.email===T.email)return!1;return this.addProperty(T),!0}addAttendeeFromNameAndEMail(T,r){const e=p.fromNameAndEMail(T,r);return this._addAttendee(e)}addAttendeeFromNameEMailRoleUserTypeAndRSVP(T,r,e,n,t){const i=p.fromNameEMailRoleUserTypeAndRSVP(T,r,e,n,t,!1);return this._addAttendee(i)}setOrganizerFromNameAndEMail(T,r){this.deleteAllProperties("ORGANIZER"),this.addProperty(p.fromNameAndEMail(T,r,!0))}addAttachmentFromData(T,r=null){this.addProperty(L.fromData(T,r))}addAttachmentFromLink(T,r=null){this.addProperty(L.fromLink(T,r))}addContact(T){this.addProperty(new H("CONTACT",T))}addComment(T){this.addProperty(new H("COMMENT",T))}addImageFromData(T,r=null,e=null){this.addProperty(_.fromData(T,r,e))}addImageFromLink(T,r=null,e=null){this.addProperty(_.fromLink(T,r,e))}addRelation(T,r){this.addProperty(y.fromRelTypeAndId(T,r))}addRequestStatus(T,r){this.addProperty(C.fromCodeAndMessage(T,r))}addAbsoluteAlarm(T,r){const e=new j("VALARM",[["action",T],P.fromAbsolute(r)]);return this.addComponent(e),e}addRelativeAlarm(T,r,e=!0){const n=new j("VALARM",[["action",T],P.fromRelativeAndRelated(r,e)]);return this.addComponent(n),n}markPropertyAsDirty(T){this.markDirty();["DTSTART","DTEND","DURATION","RRULE","RDATE","EXDATE","STATUS",...F("property-list-significant-change",[])].includes(s(T))&&this.markChangesAsSignificant()}markSubComponentAsDirty(T){this.markDirty(),F("component-list-significant-change",[]).includes(T)&&this.markChangesAsSignificant()}isDirty(){return this._dirty||this._significantChange}markDirty(){this._dirty=!0}markChangesAsSignificant(){this._significantChange=!0}undirtify(){return!!this.isDirty()&&(this.hasProperty("SEQUENCE")||(this.sequence=0),this.updatePropertyWithValue("DTSTAMP",Y.fromJSDate(k(),!0)),this.updatePropertyWithValue("LAST-MODIFIED",Y.fromJSDate(k(),!0)),this._significantChange&&this.sequence++,this.resetDirty(),!0)}resetDirty(){this._dirty=!1,this._significantChange=!1}updatePropertyWithValue(T,r){super.updatePropertyWithValue(T,r),"UID"===s(T)&&(this._cachedId=null),this.markPropertyAsDirty(T)}addProperty(T){return this.markPropertyAsDirty(T.name),T.subscribe((()=>this.markPropertyAsDirty(T.name))),super.addProperty(T)}deleteProperty(T){return this.markPropertyAsDirty(T.name),super.deleteProperty(T)}deleteAllProperties(T){return this.markPropertyAsDirty(T),super.deleteAllProperties(T)}addComponent(T){return this.markSubComponentAsDirty(T.name),T.subscribe((()=>this.markSubComponentAsDirty(T.name))),super.addComponent(T)}deleteComponent(T){return this.markSubComponentAsDirty(T.name),super.deleteComponent(T)}deleteAllComponents(T){return this.markSubComponentAsDirty(T),super.deleteAllComponents(T)}getReferenceRecurrenceId(){return this.originalRecurrenceId?this.originalRecurrenceId:this.recurrenceId?this.recurrenceId:this.startDate}_overridePrimaryItem(){const T=this.primaryItem.startDate;for(const T of this.primaryItem.getPropertyIterator())this.primaryItem.deleteProperty(T);for(const T of this.getPropertyIterator())this.primaryItem.addProperty(T);this.recurrenceManager.resetCache(),0!==this.startDate.compare(T)&&this.recurrenceManager.updateStartDateOfMasterItem(this.startDate,T)}static _getConstructorForComponentName(T){
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */
return function(T){switch(s(T)){case"VALARM":return j;default:return Q}}(T)}static fromICALJs(...T){const r=super.fromICALJs(...T);return r.resetDirty(),r}}var $,X;
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */
function TT(T){return T.getFirstPropertyFirstValue("X-NEXTCLOUD-BC-FIELD-TYPE")}v(q.prototype,{name:"stampTime",iCalendarName:"DTSTAMP"}),v(q.prototype,{name:"recurrenceId",iCalendarName:"RECURRENCE-ID"}),v(q.prototype,"color"),v(q.prototype,{name:"creationTime",iCalendarName:"CREATED"}),v(q.prototype,{name:"modificationTime",iCalendarName:"LAST-MODIFIED"}),v(q.prototype,"organizer"),v(q.prototype,"sequence"),v(q.prototype,"status"),v(q.prototype,"url"),v(q.prototype,{name:"title",iCalendarName:"SUMMARY"}),v(q.prototype,{name:"accessClass",iCalendarName:"class",allowedValues:["PUBLIC","PRIVATE","CONFIDENTIAL"],defaultValue:"PUBLIC",unknownValue:"PRIVATE"}),w(q.prototype,{name:"category",pluralName:"categories",iCalendarName:"CATEGORIES"}),b(q.prototype,{name:"attendee"}),b(q.prototype,{name:"attachment",iCalendarName:"ATTACH"}),b(q.prototype,{name:"relation",iCalendarName:"RELATED-TO"}),b(q.prototype,"comment"),b(q.prototype,"contact"),b(q.prototype,"image"),b(q.prototype,{name:"requestStatus",pluralName:"requestStatus",iCalendarName:"REQUEST-STATUS"}),($=q.prototype)["get"+o((X=function(T){return"string"==typeof T&&(T={name:T}),Object.assign({},{iCalendarName:"V"+s(T.name),pluralName:T.name+"s"},T)}(X="alarm")).name)+"Iterator"]=function*(){yield*this.getComponentIterator(X.iCalendarName)},$["get"+o(X.name)+"List"]=function(){return Array.from(this["get"+o(X.name)+"Iterator"]())},$["remove"+o(X.name)]=function(T){this.deleteComponent(T)},$["clearAll"+o(X.pluralName)]=function(){this.deleteAllComponents(X.iCalendarName)};
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */
class rT extends q{isAllDay(){return this.startDate.isDate&&this.endDate.isDate}canModifyAllDay(){return!this.recurrenceManager.masterItem.isRecurring()}get endDate(){if(this.hasProperty("dtend"))return this.getFirstPropertyFirstValue("dtend");const T=this.startDate.clone();return this.hasProperty("duration")?T.addDuration(this.getFirstPropertyFirstValue("duration")):this.startDate.isDate&&T.addDuration(d.fromSeconds(86400)),T}set endDate(T){this.deleteAllProperties("duration"),this.updatePropertyWithValue("dtend",T)}get duration(){return this.hasProperty("duration")?this.getFirstPropertyFirstValue("duration"):this.startDate.subtractDateWithTimezone(this.endDate)}set duration(T){this.deleteAllProperties("dtend"),this.updatePropertyWithValue("duration",T)}setGeographicalPositionFromLatitudeAndLongitude(T,r){this.deleteAllProperties("GEO"),this.addProperty(U.fromPosition(T,r))}addConference(T,r=null,e=null){this._modify(),this.addProperty(G.fromURILabelAndFeatures(T,r,e))}addDurationToStart(T){this.startDate.addDuration(T)}addDurationToEnd(T){const r=this.endDate;r.addDuration(T),this.endDate=r}shiftByDuration(T,r,e,n,t){const i=this.isAllDay();if(i!==r&&!this.canModifyAllDay())throw new TypeError("Can't modify all-day of this event");if(this.startDate.isDate=r,this.startDate.addDuration(T),i&&!r&&(this.startDate.replaceTimezone(e),this.endDate=this.startDate.clone(),this.endDate.addDuration(t)),!i&&r&&(this.endDate=this.startDate.clone(),this.endDate.addDuration(n)),i===r){const r=this.endDate;r.addDuration(T),this.endDate=r}}isBirthdayEvent(){return"BDAY"===TT(this)}getIconForBirthdayEvent(){return function(T){switch(TT(T)){case"BDAY":return"🎂";case"DEATHDATE":return"⚰️";case"ANNIVERSARY":return"💍";default:return null}}(this)}getAgeForBirthdayEvent(){return function(T,r){if(!T.hasProperty("X-NEXTCLOUD-BC-YEAR"))return null;const e=T.getFirstPropertyFirstValue("X-NEXTCLOUD-BC-YEAR");return parseInt(r,10)-parseInt(e,10)}(this,this.startDate.year)}toICSEntireSeries(){return this.root.toICS()}toICSThisOccurrence(){const T=this.clone();return T.deleteAllProperties("RRULE"),T.deleteAllProperties("EXRULE"),T.deleteAllProperties("RDATE"),T.deleteAllProperties("EXDATE"),T.deleteAllProperties("RECURRENCE-ID"),T.root=T.root.constructor.fromEmpty(),T.parent=T.root,T.root.addComponent(T),T.root.toICS()}isInTimeFrame(T,r){return T.compare(this.endDate)<=0&&r.compare(this.startDate)>=0}}v(rT.prototype,{name:"timeTransparency",iCalendarName:"TRANSP",allowedValues:["OPAQUE","TRANSPARENT"],defaultValue:"OPAQUE"}),v(rT.prototype,"description"),v(rT.prototype,{name:"geographicalPosition",iCalendarName:"GEO"}),v(rT.prototype,"location"),v(rT.prototype,{name:"priority",allowedValues:Array(9).keys(),defaultValue:0,unknownValue:0}),w(rT.prototype,{name:"resource",iCalendarName:"RESOURCES"}),b(rT.prototype,"conference");
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */
class eT extends Q{get startDate(){return this.getFirstPropertyFirstValue("DTSTART")}set startDate(T){this._modify(),this.updatePropertyWithValue("DTSTART",T.getInTimezone(K.utc))}get endDate(){return this.getFirstPropertyFirstValue("DTEND")}set endDate(T){this._modify(),this.updatePropertyWithValue("DTEND",T.getInTimezone(K.utc))}*getFreeBusyIterator(){yield*this.getPropertyIterator("FREEBUSY")}addAttendeeFromNameAndEMail(T,r){this._modify(),this.addProperty(p.fromNameAndEMail(T,r))}setOrganizerFromNameAndEMail(T,r){this._modify(),this.deleteAllProperties("ORGANIZER"),this.addProperty(p.fromNameAndEMail(T,r,!0))}}v(eT.prototype,"organizer"),v(eT.prototype,"uid"),b(eT.prototype,"attendee");
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */
class nT extends q{addDescription(T){this.addProperty(new H("DESCRIPTION",T))}}b(nT.prototype,"description");
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */
class tT extends q{isAllDay(){const T=["DTSTART","DUE"];for(const r of T)if(this.hasProperty(r))return this.getFirstPropertyFirstValue(r).isDate;return!0}canModifyAllDay(){return!(!this.hasProperty("dtstart")&&!this.hasProperty("due"))&&!this.recurrenceManager.masterItem.isRecurring()}get endDate(){if(this.hasProperty("due"))return this.getFirstPropertyFirstValue("due");if(!this.hasProperty("dtstart")||!this.hasProperty("duration"))return null;const T=this.startDate.clone();return T.addDuration(this.getFirstPropertyFirstValue("duration")),T}shiftByDuration(T,r,e,n,t){const i=this.isAllDay();if(!this.hasProperty("dtstart")&&!this.hasProperty("due"))throw new TypeError("This task does not have a start-date nor due-date");if(i!==r&&!this.canModifyAllDay())throw new TypeError("Can't modify all-day of this todo");this.hasProperty("dtstart")&&(this.startDate.isDate=r,this.startDate.addDuration(T),i&&!r&&this.startDate.replaceTimezone(e)),this.hasProperty("due")&&(this.dueTime.isDate=r,this.dueTime.addDuration(T),i&&!r&&this.dueTime.replaceTimezone(e))}isInTimeFrame(T,r){return!this.hasProperty("dtstart")&&!this.hasProperty("due")||(!this.hasProperty("dtstart")&&this.hasProperty("due")?T.compare(this.endDate)<=0:T.compare(this.endDate)<=0&&r.compare(this.startDate)>=0)}get geographicalPosition(){return this.getFirstProperty("GEO")}setGeographicalPositionFromLatitudeAndLongitude(T,r){this.deleteAllProperties("GEO"),this.addProperty(U.fromPosition(T,r))}addConference(T,r=null,e=null){this.addProperty(G.fromURILabelAndFeatures(T,r,e))}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */
function iT(T){switch(s(T)){case"VEVENT":return rT;case"VFREEBUSY":return eT;case"VJOURNAL":return nT;case"VTIMEZONE":return W;case"VTODO":return tT;default:return Q}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */v(tT.prototype,{name:"completedTime",iCalendarName:"COMPLETED"}),v(tT.prototype,{name:"dueTime",iCalendarName:"DUE"}),v(tT.prototype,{name:"duration"}),v(tT.prototype,{name:"percent",iCalendarName:"PERCENT-COMPLETE"}),v(tT.prototype,"description"),v(tT.prototype,"location"),v(tT.prototype,{name:"priority",allowedValues:Array.from(Array(10).keys()),defaultValue:0,unknownValue:0}),w(tT.prototype,{name:"resource",iCalendarName:"RESOURCES"}),b(tT.prototype,"conference");class aT extends Q{constructor(T="VCALENDAR",r=[],e=[]){super(T,r,e),this.root=this,this.parent=null}*getTimezoneIterator(){yield*this.getComponentIterator("vtimezone")}*getVObjectIterator(){yield*this.getEventIterator(),yield*this.getJournalIterator(),yield*this.getTodoIterator()}*getEventIterator(){yield*this.getComponentIterator("vevent")}*getFreebusyIterator(){yield*this.getComponentIterator("vfreebusy")}*getJournalIterator(){yield*this.getComponentIterator("vjournal")}*getTodoIterator(){yield*this.getComponentIterator("vtodo")}static _getConstructorForComponentName(T){return iT(T)}toICS(T=!0){for(const T of this.getVObjectIterator())T.undirtify();const r=this.toICALJs();return T&&t.default.helpers.updateTimezones(r),r.toString()}static fromEmpty(T=[]){return new this("VCALENDAR",[["prodid",F("PRODID","-//IDN georgehrke.com//calendar-js//EN")],["calscale","GREGORIAN"],["version","2.0"]].concat(T))}static fromMethod(T){return this.fromEmpty([["method",T]])}static fromICALJs(T){const r=super.fromICALJs(T);return r.root=r,r}}v(aT.prototype,{name:"productId",iCalendarName:"PRODID"}),v(aT.prototype,{name:"version"}),v(aT.prototype,{name:"calendarScale",iCalendarName:"CALSCALE",defaultValue:"GREGORIAN"}),v(aT.prototype,{name:"method"});
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */
class AT{constructor(){if(new.target===AT)throw new TypeError("Cannot instantiate abstract class AbstractRepairStep")}repair(T){throw new TypeError("Abstract method not implemented by subclass")}static priority(){return 0}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class ET extends AT{repair(T){return T.replace(/^BEGIN:(VEVENT|VTODO|VJOURNAL)$(((?!^END:(VEVENT|VTODO|VJOURNAL)$)(?!^UID.*$)(.|\n))*)^END:(VEVENT|VTODO|VJOURNAL)$\n/gm,((T,r,n)=>"BEGIN:"+r+"\r\nUID:"+e.v4()+n+"END:"+r+"\r\n"))}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class DT extends AT{repair(T){return T.replace(/^(DTSTART|DTEND)(.*):([0-9]{8})T(::)$/gm,((T,r,e,n)=>r+";VALUE=DATE:"+n))}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class sT extends AT{repair(T){return T.replace(/^(DTSTART|DTEND)(((?!VALUE=DATE).)*):([0-9]{8})$/gm,((T,r,e,n,t)=>r+e+";VALUE=DATE:"+t))}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class oT extends AT{repair(T){return T.replace(/^TRIGGER:P$/gm,"TRIGGER:P0D").replace(/^TRIGGER:-P$/gm,"TRIGGER:P0D")}}
/**
	 * @copyright Copyright (c) 2020 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class RT extends AT{repair(T){return T.replace(/^CREATED:00001231T000000Z$/gm,"CREATED:19700101T000000Z")}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class ST extends AT{repair(T){let r=!1,e=!1,n=!1;const t=new Set;return T.replace(/^END:VCALENDAR$(((?!^BEGIN:)(.|\n))*)^BEGIN:VCALENDAR$\n/gm,"").replace(/^PRODID:(.*)$\n/gm,(T=>r?"":(r=!0,T))).replace(/^VERSION:(.*)$\n/gm,(T=>e?"":(e=!0,T))).replace(/^CALSCALE:(.*)$\n/gm,(T=>n?"":(n=!0,T))).replace(/^BEGIN:VTIMEZONE$(((?!^END:VTIMEZONE$)(.|\n))*)^END:VTIMEZONE$\n/gm,(T=>{const r=T.match(/^TZID:(.*)$/gm);if(null===r)return"";const e=s(r[0].substr(5));return t.has(e)?"":(t.add(e),T)}))}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class FT extends AT{repair(T){return T.replace(/(^.*)(;X-NC-GROUP-ID=\d+)(:.*$)/gm,"$1$3")}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */var NT={version:"2.2019c",aliases:{"AUS Central Standard Time":{aliasTo:"Australia/Darwin"},"AUS Eastern Standard Time":{aliasTo:"Australia/Sydney"},"Afghanistan Standard Time":{aliasTo:"Asia/Kabul"},"Africa/Asmera":{aliasTo:"Africa/Asmara"},"Africa/Timbuktu":{aliasTo:"Africa/Bamako"},"Alaskan Standard Time":{aliasTo:"America/Anchorage"},"America/Argentina/ComodRivadavia":{aliasTo:"America/Argentina/Catamarca"},"America/Buenos_Aires":{aliasTo:"America/Argentina/Buenos_Aires"},"America/Louisville":{aliasTo:"America/Kentucky/Louisville"},"America/Montreal":{aliasTo:"America/Toronto"},"America/Santa_Isabel":{aliasTo:"America/Tijuana"},"Arab Standard Time":{aliasTo:"Asia/Riyadh"},"Arabian Standard Time":{aliasTo:"Asia/Dubai"},"Arabic Standard Time":{aliasTo:"Asia/Baghdad"},"Argentina Standard Time":{aliasTo:"America/Argentina/Buenos_Aires"},"Asia/Calcutta":{aliasTo:"Asia/Kolkata"},"Asia/Katmandu":{aliasTo:"Asia/Kathmandu"},"Asia/Rangoon":{aliasTo:"Asia/Yangon"},"Asia/Saigon":{aliasTo:"Asia/Ho_Chi_Minh"},"Atlantic Standard Time":{aliasTo:"America/Halifax"},"Atlantic/Faeroe":{aliasTo:"Atlantic/Faroe"},"Atlantic/Jan_Mayen":{aliasTo:"Europe/Oslo"},"Azerbaijan Standard Time":{aliasTo:"Asia/Baku"},"Azores Standard Time":{aliasTo:"Atlantic/Azores"},"Bahia Standard Time":{aliasTo:"America/Bahia"},"Bangladesh Standard Time":{aliasTo:"Asia/Dhaka"},"Belarus Standard Time":{aliasTo:"Europe/Minsk"},"Canada Central Standard Time":{aliasTo:"America/Regina"},"Cape Verde Standard Time":{aliasTo:"Atlantic/Cape_Verde"},"Caucasus Standard Time":{aliasTo:"Asia/Yerevan"},"Cen. Australia Standard Time":{aliasTo:"Australia/Adelaide"},"Central America Standard Time":{aliasTo:"America/Guatemala"},"Central Asia Standard Time":{aliasTo:"Asia/Almaty"},"Central Brazilian Standard Time":{aliasTo:"America/Cuiaba"},"Central Europe Standard Time":{aliasTo:"Europe/Budapest"},"Central European Standard Time":{aliasTo:"Europe/Warsaw"},"Central Pacific Standard Time":{aliasTo:"Pacific/Guadalcanal"},"Central Standard Time":{aliasTo:"America/Chicago"},"Central Standard Time (Mexico)":{aliasTo:"America/Mexico_City"},"China Standard Time":{aliasTo:"Asia/Shanghai"},"E. Africa Standard Time":{aliasTo:"Africa/Nairobi"},"E. Australia Standard Time":{aliasTo:"Australia/Brisbane"},"E. South America Standard Time":{aliasTo:"America/Sao_Paulo"},"Eastern Standard Time":{aliasTo:"America/New_York"},"Egypt Standard Time":{aliasTo:"Africa/Cairo"},"Ekaterinburg Standard Time":{aliasTo:"Asia/Yekaterinburg"},"Etc/GMT":{aliasTo:"UTC"},"Etc/GMT+0":{aliasTo:"UTC"},"Etc/UCT":{aliasTo:"UTC"},"Etc/UTC":{aliasTo:"UTC"},"Etc/Unversal":{aliasTo:"UTC"},"Etc/Zulu":{aliasTo:"UTC"},"Europe/Belfast":{aliasTo:"Europe/London"},"FLE Standard Time":{aliasTo:"Europe/Kiev"},"Fiji Standard Time":{aliasTo:"Pacific/Fiji"},GMT:{aliasTo:"UTC"},"GMT Standard Time":{aliasTo:"Europe/London"},"GMT+0":{aliasTo:"UTC"},GMT0:{aliasTo:"UTC"},"GTB Standard Time":{aliasTo:"Europe/Bucharest"},"Georgian Standard Time":{aliasTo:"Asia/Tbilisi"},"Greenland Standard Time":{aliasTo:"America/Godthab"},Greenwich:{aliasTo:"UTC"},"Greenwich Standard Time":{aliasTo:"Atlantic/Reykjavik"},"Hawaiian Standard Time":{aliasTo:"Pacific/Honolulu"},"India Standard Time":{aliasTo:"Asia/Calcutta"},"Iran Standard Time":{aliasTo:"Asia/Tehran"},"Israel Standard Time":{aliasTo:"Asia/Jerusalem"},"Jordan Standard Time":{aliasTo:"Asia/Amman"},"Kaliningrad Standard Time":{aliasTo:"Europe/Kaliningrad"},"Korea Standard Time":{aliasTo:"Asia/Seoul"},"Libya Standard Time":{aliasTo:"Africa/Tripoli"},"Line Islands Standard Time":{aliasTo:"Pacific/Kiritimati"},"Magadan Standard Time":{aliasTo:"Asia/Magadan"},"Mauritius Standard Time":{aliasTo:"Indian/Mauritius"},"Middle East Standard Time":{aliasTo:"Asia/Beirut"},"Montevideo Standard Time":{aliasTo:"America/Montevideo"},"Morocco Standard Time":{aliasTo:"Africa/Casablanca"},"Mountain Standard Time":{aliasTo:"America/Denver"},"Mountain Standard Time (Mexico)":{aliasTo:"America/Chihuahua"},"Myanmar Standard Time":{aliasTo:"Asia/Rangoon"},"N. Central Asia Standard Time":{aliasTo:"Asia/Novosibirsk"},"Namibia Standard Time":{aliasTo:"Africa/Windhoek"},"Nepal Standard Time":{aliasTo:"Asia/Katmandu"},"New Zealand Standard Time":{aliasTo:"Pacific/Auckland"},"Newfoundland Standard Time":{aliasTo:"America/St_Johns"},"North Asia East Standard Time":{aliasTo:"Asia/Irkutsk"},"North Asia Standard Time":{aliasTo:"Asia/Krasnoyarsk"},"Pacific SA Standard Time":{aliasTo:"America/Santiago"},"Pacific Standard Time":{aliasTo:"America/Los_Angeles"},"Pacific Standard Time (Mexico)":{aliasTo:"America/Santa_Isabel"},"Pacific/Johnston":{aliasTo:"Pacific/Honolulu"},"Pakistan Standard Time":{aliasTo:"Asia/Karachi"},"Paraguay Standard Time":{aliasTo:"America/Asuncion"},"Romance Standard Time":{aliasTo:"Europe/Paris"},"Russia Time Zone 10":{aliasTo:"Asia/Srednekolymsk"},"Russia Time Zone 11":{aliasTo:"Asia/Kamchatka"},"Russia Time Zone 3":{aliasTo:"Europe/Samara"},"Russian Standard Time":{aliasTo:"Europe/Moscow"},"SA Eastern Standard Time":{aliasTo:"America/Cayenne"},"SA Pacific Standard Time":{aliasTo:"America/Bogota"},"SA Western Standard Time":{aliasTo:"America/La_Paz"},"SE Asia Standard Time":{aliasTo:"Asia/Bangkok"},"Samoa Standard Time":{aliasTo:"Pacific/Apia"},"Singapore Standard Time":{aliasTo:"Asia/Singapore"},"South Africa Standard Time":{aliasTo:"Africa/Johannesburg"},"Sri Lanka Standard Time":{aliasTo:"Asia/Colombo"},"Syria Standard Time":{aliasTo:"Asia/Damascus"},"Taipei Standard Time":{aliasTo:"Asia/Taipei"},"Tasmania Standard Time":{aliasTo:"Australia/Hobart"},"Tokyo Standard Time":{aliasTo:"Asia/Tokyo"},"Tonga Standard Time":{aliasTo:"Pacific/Tongatapu"},"Turkey Standard Time":{aliasTo:"Europe/Istanbul"},UCT:{aliasTo:"UTC"},"US Eastern Standard Time":{aliasTo:"America/Indiana/Indianapolis"},"US Mountain Standard Time":{aliasTo:"America/Phoenix"},"US/Central":{aliasTo:"America/Chicago"},"US/Eastern":{aliasTo:"America/New_York"},"US/Mountain":{aliasTo:"America/Denver"},"US/Pacific":{aliasTo:"America/Los_Angeles"},"US/Pacific-New":{aliasTo:"America/Los_Angeles"},"Ulaanbaatar Standard Time":{aliasTo:"Asia/Ulaanbaatar"},Universal:{aliasTo:"UTC"},"Venezuela Standard Time":{aliasTo:"America/Caracas"},"Vladivostok Standard Time":{aliasTo:"Asia/Vladivostok"},"W. Australia Standard Time":{aliasTo:"Australia/Perth"},"W. Central Africa Standard Time":{aliasTo:"Africa/Lagos"},"W. Europe Standard Time":{aliasTo:"Europe/Berlin"},"West Asia Standard Time":{aliasTo:"Asia/Tashkent"},"West Pacific Standard Time":{aliasTo:"Pacific/Port_Moresby"},"Yakutsk Standard Time":{aliasTo:"Asia/Yakutsk"},Z:{aliasTo:"UTC"},Zulu:{aliasTo:"UTC"},utc:{aliasTo:"UTC"}},zones:{"Africa/Abidjan":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0051900",longitude:"-0040200"},"Africa/Accra":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0053300",longitude:"+0001300"},"Africa/Addis_Ababa":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0090200",longitude:"+0384200"},"Africa/Algiers":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0364700",longitude:"+0030300"},"Africa/Asmara":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0152000",longitude:"+0385300"},"Africa/Bamako":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0123900",longitude:"-0080000"},"Africa/Bangui":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0042200",longitude:"+0183500"},"Africa/Banjul":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0132800",longitude:"-0163900"},"Africa/Bissau":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0115100",longitude:"-0153500"},"Africa/Blantyre":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0154700",longitude:"+0350000"},"Africa/Brazzaville":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0041600",longitude:"+0151700"},"Africa/Bujumbura":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0032300",longitude:"+0292200"},"Africa/Cairo":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0300300",longitude:"+0311500"},"Africa/Casablanca":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:+00\r\nDTSTART:19700101T000000\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:+01\r\nDTSTART:20180325T020000\r\nRDATE:20180325T020000\r\nRDATE:20180617T020000\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:+00\r\nDTSTART:20180513T030000\r\nRDATE:20180513T030000\r\nEND:STANDARD","BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:+01\r\nDTSTART:20190609T020000\r\nRDATE:20190609T020000\r\nRDATE:20200524T020000\r\nRDATE:20210516T020000\r\nRDATE:20220508T020000\r\nEND:STANDARD","BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:+01\r\nDTSTART:20181028T030000\r\nRDATE:20181028T030000\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:+00\r\nDTSTART:20190505T030000\r\nRDATE:20190505T030000\r\nRDATE:20200419T030000\r\nRDATE:20210411T030000\r\nRDATE:20220327T030000\r\nEND:DAYLIGHT"],latitude:"+0333900",longitude:"-0073500"},"Africa/Ceuta":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0355300",longitude:"-0051900"},"Africa/Conakry":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0093100",longitude:"-0134300"},"Africa/Dakar":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0144000",longitude:"-0172600"},"Africa/Dar_es_Salaam":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0064800",longitude:"+0391700"},"Africa/Djibouti":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0113600",longitude:"+0430900"},"Africa/Douala":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0040300",longitude:"+0094200"},"Africa/El_Aaiun":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0100\r\nTZOFFSETTO:+0000\r\nTZNAME:+00\r\nDTSTART:19700101T000000\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:+01\r\nDTSTART:20180325T020000\r\nRDATE:20180325T020000\r\nRDATE:20180617T020000\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:+00\r\nDTSTART:20180513T030000\r\nRDATE:20180513T030000\r\nEND:STANDARD","BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:+01\r\nDTSTART:20181028T030000\r\nRDATE:20181028T030000\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:+00\r\nDTSTART:20190505T030000\r\nRDATE:20190505T030000\r\nRDATE:20200419T030000\r\nRDATE:20210411T030000\r\nRDATE:20220327T030000\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:+01\r\nDTSTART:20190609T020000\r\nRDATE:20190609T020000\r\nRDATE:20200524T020000\r\nRDATE:20210516T020000\r\nRDATE:20220508T020000\r\nEND:STANDARD"],latitude:"+0270900",longitude:"-0131200"},"Africa/Freetown":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0083000",longitude:"-0131500"},"Africa/Gaborone":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0243900",longitude:"+0255500"},"Africa/Harare":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0175000",longitude:"+0310300"},"Africa/Johannesburg":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:SAST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0261500",longitude:"+0280000"},"Africa/Juba":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0045100",longitude:"+0313700"},"Africa/Kampala":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0001900",longitude:"+0322500"},"Africa/Khartoum":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0153600",longitude:"+0323200"},"Africa/Kigali":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0015700",longitude:"+0300400"},"Africa/Kinshasa":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0041800",longitude:"+0151800"},"Africa/Lagos":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0062700",longitude:"+0032400"},"Africa/Libreville":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0002300",longitude:"+0092700"},"Africa/Lome":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0060800",longitude:"+0011300"},"Africa/Luanda":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0084800",longitude:"+0131400"},"Africa/Lubumbashi":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0114000",longitude:"+0272800"},"Africa/Lusaka":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0152500",longitude:"+0281700"},"Africa/Malabo":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0034500",longitude:"+0084700"},"Africa/Maputo":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0255800",longitude:"+0323500"},"Africa/Maseru":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:SAST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0292800",longitude:"+0273000"},"Africa/Mbabane":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:SAST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0261800",longitude:"+0310600"},"Africa/Mogadishu":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0020400",longitude:"+0452200"},"Africa/Monrovia":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0061800",longitude:"-0104700"},"Africa/Nairobi":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0011700",longitude:"+0364900"},"Africa/Ndjamena":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0120700",longitude:"+0150300"},"Africa/Niamey":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0133100",longitude:"+0020700"},"Africa/Nouakchott":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0180600",longitude:"-0155700"},"Africa/Ouagadougou":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0122200",longitude:"-0013100"},"Africa/Porto-Novo":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0062900",longitude:"+0023700"},"Africa/Sao_Tome":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:20180101T010000\r\nRDATE:20180101T010000\r\nEND:STANDARD","BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:20190101T020000\r\nRDATE:20190101T020000\r\nEND:STANDARD"],latitude:"+0002000",longitude:"+0064400"},"Africa/Tripoli":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0325400",longitude:"+0131100"},"Africa/Tunis":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0364800",longitude:"+0101100"},"Africa/Windhoek":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0223400",longitude:"+0170600"},"America/Adak":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-1000\r\nTZOFFSETTO:-0900\r\nTZNAME:HDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-1000\r\nTZNAME:HST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0515248",longitude:"-1763929"},"America/Anchorage":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-0800\r\nTZNAME:AKDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0900\r\nTZNAME:AKST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0611305",longitude:"-1495401"},"America/Anguilla":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0181200",longitude:"-0630400"},"America/Antigua":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0170300",longitude:"-0614800"},"America/Araguaina":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0071200",longitude:"-0481200"},"America/Argentina/Buenos_Aires":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0343600",longitude:"-0582700"},"America/Argentina/Catamarca":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0282800",longitude:"-0654700"},"America/Argentina/Cordoba":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0312400",longitude:"-0641100"},"America/Argentina/Jujuy":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0241100",longitude:"-0651800"},"America/Argentina/La_Rioja":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0292600",longitude:"-0665100"},"America/Argentina/Mendoza":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0325300",longitude:"-0684900"},"America/Argentina/Rio_Gallegos":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0513800",longitude:"-0691300"},"America/Argentina/Salta":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0244700",longitude:"-0652500"},"America/Argentina/San_Juan":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0313200",longitude:"-0683100"},"America/Argentina/San_Luis":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0331900",longitude:"-0662100"},"America/Argentina/Tucuman":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0264900",longitude:"-0651300"},"America/Argentina/Ushuaia":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0544800",longitude:"-0681800"},"America/Aruba":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0123000",longitude:"-0695800"},"America/Asuncion":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19701004T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700322T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=4SU\r\nEND:STANDARD"],latitude:"-0251600",longitude:"-0574000"},"America/Atikokan":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0484531",longitude:"-0913718"},"America/Bahia":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0125900",longitude:"-0383100"},"America/Bahia_Banderas":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700405T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:DAYLIGHT"],latitude:"+0204800",longitude:"-1051500"},"America/Barbados":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0130600",longitude:"-0593700"},"America/Belem":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0012700",longitude:"-0482900"},"America/Belize":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0173000",longitude:"-0881200"},"America/Blanc-Sablon":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0512500",longitude:"-0570700"},"America/Boa_Vista":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0024900",longitude:"-0604000"},"America/Bogota":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:-05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0043600",longitude:"-0740500"},"America/Boise":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0433649",longitude:"-1161209"},"America/Cambridge_Bay":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0690650",longitude:"-1050310"},"America/Campo_Grande":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700101T000000\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:20181104T000000\r\nRDATE:20181104T000000\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:20180218T000000\r\nRDATE:20180218T000000\r\nRDATE:20190217T000000\r\nEND:STANDARD"],latitude:"-0202700",longitude:"-0543700"},"America/Cancun":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0210500",longitude:"-0864600"},"America/Caracas":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0103000",longitude:"-0665600"},"America/Cayenne":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0045600",longitude:"-0522000"},"America/Cayman":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0191800",longitude:"-0812300"},"America/Chicago":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0415100",longitude:"-0873900"},"America/Chihuahua":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700405T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0283800",longitude:"-1060500"},"America/Costa_Rica":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0095600",longitude:"-0840500"},"America/Creston":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0490600",longitude:"-1163100"},"America/Cuiaba":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:20181104T000000\r\nRDATE:20181104T000000\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:20180218T000000\r\nRDATE:20180218T000000\r\nRDATE:20190217T000000\r\nEND:STANDARD","BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0153500",longitude:"-0560500"},"America/Curacao":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0121100",longitude:"-0690000"},"America/Danmarkshavn":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0764600",longitude:"-0184000"},"America/Dawson":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0700\r\nTZNAME:PDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0800\r\nTZNAME:PST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0640400",longitude:"-1392500"},"America/Dawson_Creek":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0594600",longitude:"-1201400"},"America/Denver":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0394421",longitude:"-1045903"},"America/Detroit":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0421953",longitude:"-0830245"},"America/Dominica":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0151800",longitude:"-0612400"},"America/Edmonton":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0533300",longitude:"-1132800"},"America/Eirunepe":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:-05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0064000",longitude:"-0695200"},"America/El_Salvador":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0134200",longitude:"-0891200"},"America/Fort_Nelson":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0584800",longitude:"-1224200"},"America/Fortaleza":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0034300",longitude:"-0383000"},"America/Glace_Bay":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:ADT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0461200",longitude:"-0595700"},"America/Godthab":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0200\r\nTZNAME:-02\r\nDTSTART:19700328T220000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYMONTHDAY=24,25,26,27,28,29,30;BYDAY=SA\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0200\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19701024T230000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYMONTHDAY=24,25,26,27,28,29,30;BYDAY=SA\r\nEND:STANDARD"],latitude:"+0641100",longitude:"-0514400"},"America/Goose_Bay":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:ADT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT"],latitude:"+0532000",longitude:"-0602500"},"America/Grand_Turk":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:20181104T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:20190310T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:20180311T020000\r\nRDATE:20180311T020000\r\nEND:DAYLIGHT"],latitude:"+0212800",longitude:"-0710800"},"America/Grenada":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0120300",longitude:"-0614500"},"America/Guadeloupe":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0161400",longitude:"-0613200"},"America/Guatemala":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0143800",longitude:"-0903100"},"America/Guayaquil":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:-05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0021000",longitude:"-0795000"},"America/Guyana":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0064800",longitude:"-0581000"},"America/Halifax":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:ADT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0443900",longitude:"-0633600"},"America/Havana":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:CST\r\nDTSTART:19701101T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:CDT\r\nDTSTART:19700308T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT"],latitude:"+0230800",longitude:"-0822200"},"America/Hermosillo":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0290400",longitude:"-1105800"},"America/Indiana/Indianapolis":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0394606",longitude:"-0860929"},"America/Indiana/Knox":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0411745",longitude:"-0863730"},"America/Indiana/Marengo":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0382232",longitude:"-0862041"},"America/Indiana/Petersburg":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0382931",longitude:"-0871643"},"America/Indiana/Tell_City":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0375711",longitude:"-0864541"},"America/Indiana/Vevay":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0384452",longitude:"-0850402"},"America/Indiana/Vincennes":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0384038",longitude:"-0873143"},"America/Indiana/Winamac":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT"],latitude:"+0410305",longitude:"-0863611"},"America/Inuvik":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0682059",longitude:"-1334300"},"America/Iqaluit":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0634400",longitude:"-0682800"},"America/Jamaica":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0175805",longitude:"-0764736"},"America/Juneau":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-0800\r\nTZNAME:AKDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0900\r\nTZNAME:AKST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0581807",longitude:"-1342511"},"America/Kentucky/Louisville":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0381515",longitude:"-0854534"},"America/Kentucky/Monticello":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0364947",longitude:"-0845057"},"America/Kralendijk":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0120903",longitude:"-0681636"},"America/La_Paz":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0163000",longitude:"-0680900"},"America/Lima":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:-05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0120300",longitude:"-0770300"},"America/Los_Angeles":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0700\r\nTZNAME:PDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0800\r\nTZNAME:PST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0340308",longitude:"-1181434"},"America/Lower_Princes":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0180305",longitude:"-0630250"},"America/Maceio":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0094000",longitude:"-0354300"},"America/Managua":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0120900",longitude:"-0861700"},"America/Manaus":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0030800",longitude:"-0600100"},"America/Marigot":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0180400",longitude:"-0630500"},"America/Martinique":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0143600",longitude:"-0610500"},"America/Matamoros":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0255000",longitude:"-0973000"},"America/Mazatlan":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700405T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0231300",longitude:"-1062500"},"America/Menominee":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0450628",longitude:"-0873651"},"America/Merida":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700405T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0205800",longitude:"-0893700"},"America/Metlakatla":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-0800\r\nTZNAME:AKDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0900\r\nTZNAME:AKST\r\nDTSTART:20191103T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD","BEGIN:STANDARD\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0800\r\nTZNAME:PST\r\nDTSTART:20181104T020000\r\nRDATE:20181104T020000\r\nEND:STANDARD","BEGIN:STANDARD\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0900\r\nTZNAME:AKST\r\nDTSTART:20190120T020000\r\nRDATE:20190120T020000\r\nEND:STANDARD"],latitude:"+0550737",longitude:"-1313435"},"America/Mexico_City":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700405T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0192400",longitude:"-0990900"},"America/Miquelon":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0200\r\nTZNAME:-02\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0200\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0470300",longitude:"-0562000"},"America/Moncton":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:ADT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0460600",longitude:"-0644700"},"America/Monterrey":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700405T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0254000",longitude:"-1001900"},"America/Montevideo":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0345433",longitude:"-0561245"},"America/Montserrat":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0164300",longitude:"-0621300"},"America/Nassau":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0250500",longitude:"-0772100"},"America/New_York":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0404251",longitude:"-0740023"},"America/Nipigon":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0490100",longitude:"-0881600"},"America/Nome":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-0800\r\nTZNAME:AKDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0900\r\nTZNAME:AKST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0643004",longitude:"-1652423"},"America/Noronha":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0200\r\nTZOFFSETTO:-0200\r\nTZNAME:-02\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0035100",longitude:"-0322500"},"America/North_Dakota/Beulah":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0471551",longitude:"-1014640"},"America/North_Dakota/Center":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0470659",longitude:"-1011757"},"America/North_Dakota/New_Salem":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0465042",longitude:"-1012439"},"America/Ojinaga":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0293400",longitude:"-1042500"},"America/Panama":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0085800",longitude:"-0793200"},"America/Pangnirtung":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0660800",longitude:"-0654400"},"America/Paramaribo":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0055000",longitude:"-0551000"},"America/Phoenix":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0332654",longitude:"-1120424"},"America/Port-au-Prince":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0183200",longitude:"-0722000"},"America/Port_of_Spain":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0103900",longitude:"-0613100"},"America/Porto_Velho":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0084600",longitude:"-0635400"},"America/Puerto_Rico":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0182806",longitude:"-0660622"},"America/Punta_Arenas":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0530900",longitude:"-0705500"},"America/Rainy_River":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0484300",longitude:"-0943400"},"America/Rankin_Inlet":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0624900",longitude:"-0920459"},"America/Recife":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0080300",longitude:"-0345400"},"America/Regina":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0502400",longitude:"-1043900"},"America/Resolute":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT"],latitude:"+0744144",longitude:"-0944945"},"America/Rio_Branco":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:-05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0095800",longitude:"-0674800"},"America/Santarem":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0022600",longitude:"-0545200"},"America/Santiago":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:20190407T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYMONTHDAY=2,3,4,5,6,7,8;BYDAY=SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:20190908T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=9;BYMONTHDAY=2,3,4,5,6,7,8;BYDAY=SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700101T000000\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:20180812T000000\r\nRDATE:20180812T000000\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:20180513T000000\r\nRDATE:20180513T000000\r\nEND:STANDARD"],latitude:"-0332700",longitude:"-0704000"},"America/Santo_Domingo":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0182800",longitude:"-0695400"},"America/Sao_Paulo":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0200\r\nTZNAME:-02\r\nDTSTART:20181104T000000\r\nRDATE:20181104T000000\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0200\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:20180218T000000\r\nRDATE:20180218T000000\r\nRDATE:20190217T000000\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0200\r\nTZOFFSETTO:-0200\r\nTZNAME:-02\r\nDTSTART:19700101T000000\r\nEND:DAYLIGHT"],latitude:"-0233200",longitude:"-0463700"},"America/Scoresbysund":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0100\r\nTZOFFSETTO:+0000\r\nTZNAME:+00\r\nDTSTART:19700329T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:-0100\r\nTZNAME:-01\r\nDTSTART:19701025T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0702900",longitude:"-0215800"},"America/Sitka":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-0800\r\nTZNAME:AKDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0900\r\nTZNAME:AKST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0571035",longitude:"-1351807"},"America/St_Barthelemy":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0175300",longitude:"-0625100"},"America/St_Johns":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0230\r\nTZOFFSETTO:-0330\r\nTZNAME:NST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0330\r\nTZOFFSETTO:-0230\r\nTZNAME:NDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT"],latitude:"+0473400",longitude:"-0524300"},"America/St_Kitts":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0171800",longitude:"-0624300"},"America/St_Lucia":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0140100",longitude:"-0610000"},"America/St_Thomas":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0182100",longitude:"-0645600"},"America/St_Vincent":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0130900",longitude:"-0611400"},"America/Swift_Current":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0501700",longitude:"-1075000"},"America/Tegucigalpa":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0140600",longitude:"-0871300"},"America/Thule":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:ADT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0763400",longitude:"-0684700"},"America/Thunder_Bay":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0482300",longitude:"-0891500"},"America/Tijuana":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0700\r\nTZNAME:PDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0800\r\nTZNAME:PST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0323200",longitude:"-1170100"},"America/Toronto":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0433900",longitude:"-0792300"},"America/Tortola":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0182700",longitude:"-0643700"},"America/Vancouver":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0700\r\nTZNAME:PDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0800\r\nTZNAME:PST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0491600",longitude:"-1230700"},"America/Whitehorse":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0700\r\nTZNAME:PDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0800\r\nTZNAME:PST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0604300",longitude:"-1350300"},"America/Winnipeg":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0495300",longitude:"-0970900"},"America/Yakutat":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-0800\r\nTZNAME:AKDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0900\r\nTZNAME:AKST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0593249",longitude:"-1394338"},"America/Yellowknife":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0622700",longitude:"-1142100"},"Antarctica/Casey":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD","BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+0800\r\nTZNAME:+08\r\nDTSTART:20180311T040000\r\nRDATE:20180311T040000\r\nEND:STANDARD"],latitude:"-0661700",longitude:"+1103100"},"Antarctica/Davis":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0683500",longitude:"+0775800"},"Antarctica/DumontDUrville":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:+10\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0664000",longitude:"+1400100"},"Antarctica/Macquarie":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0543000",longitude:"+1585700"},"Antarctica/Mawson":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0673600",longitude:"+0625300"},"Antarctica/McMurdo":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1300\r\nTZNAME:NZDT\r\nDTSTART:19700927T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=9;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+1300\r\nTZOFFSETTO:+1200\r\nTZNAME:NZST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD"],latitude:"-0775000",longitude:"+1663600"},"Antarctica/Palmer":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0644800",longitude:"-0640600"},"Antarctica/Rothera":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0673400",longitude:"-0680800"},"Antarctica/Syowa":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0690022",longitude:"+0393524"},"Antarctica/Troll":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0200\r\nTZNAME:+02\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0000\r\nTZNAME:+00\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"-0720041",longitude:"+0023206"},"Antarctica/Vostok":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0782400",longitude:"+1065400"},"Arctic/Longyearbyen":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0780000",longitude:"+0160000"},"Asia/Aden":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0124500",longitude:"+0451200"},"Asia/Almaty":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0431500",longitude:"+0765700"},"Asia/Amman":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700326T235959\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1TH\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701030T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1FR\r\nEND:STANDARD"],latitude:"+0315700",longitude:"+0355600"},"Asia/Anadyr":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0644500",longitude:"+1772900"},"Asia/Aqtau":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0443100",longitude:"+0501600"},"Asia/Aqtobe":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0501700",longitude:"+0571000"},"Asia/Ashgabat":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0375700",longitude:"+0582300"},"Asia/Atyrau":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0470700",longitude:"+0515600"},"Asia/Baghdad":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0332100",longitude:"+0442500"},"Asia/Bahrain":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0262300",longitude:"+0503500"},"Asia/Baku":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0402300",longitude:"+0495100"},"Asia/Bangkok":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0134500",longitude:"+1003100"},"Asia/Barnaul":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0532200",longitude:"+0834500"},"Asia/Beirut":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0335300",longitude:"+0353000"},"Asia/Bishkek":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0425400",longitude:"+0743600"},"Asia/Brunei":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:+08\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0045600",longitude:"+1145500"},"Asia/Chita":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0900\r\nTZOFFSETTO:+0900\r\nTZNAME:+09\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0520300",longitude:"+1132800"},"Asia/Choibalsan":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:+08\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0480400",longitude:"+1143000"},"Asia/Colombo":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0530\r\nTZOFFSETTO:+0530\r\nTZNAME:+0530\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0065600",longitude:"+0795100"},"Asia/Damascus":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701030T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1FR\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700327T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1FR\r\nEND:DAYLIGHT"],latitude:"+0333000",longitude:"+0361800"},"Asia/Dhaka":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0234300",longitude:"+0902500"},"Asia/Dili":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0900\r\nTZOFFSETTO:+0900\r\nTZNAME:+09\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0083300",longitude:"+1253500"},"Asia/Dubai":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0251800",longitude:"+0551800"},"Asia/Dushanbe":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0383500",longitude:"+0684800"},"Asia/Famagusta":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:20180325T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT"],latitude:"+0350700",longitude:"+0335700"},"Asia/Gaza":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701031T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SA\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:20190329T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1FR\r\nEND:DAYLIGHT","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:20180324T010000\r\nRDATE:20180324T010000\r\nEND:DAYLIGHT"],latitude:"+0313000",longitude:"+0342800"},"Asia/Hebron":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701031T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SA\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:20190329T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1FR\r\nEND:DAYLIGHT","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:20180324T010000\r\nRDATE:20180324T010000\r\nEND:DAYLIGHT"],latitude:"+0313200",longitude:"+0350542"},"Asia/Ho_Chi_Minh":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0104500",longitude:"+1064000"},"Asia/Hong_Kong":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:HKT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0221700",longitude:"+1140900"},"Asia/Hovd":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0480100",longitude:"+0913900"},"Asia/Irkutsk":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:+08\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0521600",longitude:"+1042000"},"Asia/Istanbul":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0410100",longitude:"+0285800"},"Asia/Jakarta":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:WIB\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0061000",longitude:"+1064800"},"Asia/Jayapura":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0900\r\nTZOFFSETTO:+0900\r\nTZNAME:WIT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0023200",longitude:"+1404200"},"Asia/Jerusalem":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:IDT\r\nDTSTART:19700327T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYMONTHDAY=23,24,25,26,27,28,29;BYDAY=FR\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:IST\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0314650",longitude:"+0351326"},"Asia/Kabul":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0430\r\nTZOFFSETTO:+0430\r\nTZNAME:+0430\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0343100",longitude:"+0691200"},"Asia/Kamchatka":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0530100",longitude:"+1583900"},"Asia/Karachi":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:PKT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0245200",longitude:"+0670300"},"Asia/Kathmandu":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0545\r\nTZOFFSETTO:+0545\r\nTZNAME:+0545\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0274300",longitude:"+0851900"},"Asia/Khandyga":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0900\r\nTZOFFSETTO:+0900\r\nTZNAME:+09\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0623923",longitude:"+1353314"},"Asia/Kolkata":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0530\r\nTZOFFSETTO:+0530\r\nTZNAME:IST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0223200",longitude:"+0882200"},"Asia/Krasnoyarsk":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0560100",longitude:"+0925000"},"Asia/Kuala_Lumpur":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:+08\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0031000",longitude:"+1014200"},"Asia/Kuching":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:+08\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0013300",longitude:"+1102000"},"Asia/Kuwait":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0292000",longitude:"+0475900"},"Asia/Macau":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0221150",longitude:"+1133230"},"Asia/Magadan":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0593400",longitude:"+1504800"},"Asia/Makassar":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:WITA\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0050700",longitude:"+1192400"},"Asia/Manila":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:PST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0143500",longitude:"+1210000"},"Asia/Muscat":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0233600",longitude:"+0583500"},"Asia/Nicosia":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT"],latitude:"+0351000",longitude:"+0332200"},"Asia/Novokuznetsk":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0534500",longitude:"+0870700"},"Asia/Novosibirsk":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0550200",longitude:"+0825500"},"Asia/Omsk":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0550000",longitude:"+0732400"},"Asia/Oral":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0511300",longitude:"+0512100"},"Asia/Phnom_Penh":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0113300",longitude:"+1045500"},"Asia/Pontianak":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:WIB\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0000200",longitude:"+1092000"},"Asia/Pyongyang":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0900\r\nTZOFFSETTO:+0830\r\nTZNAME:KST\r\nDTSTART:19700101T000000\r\nEND:STANDARD","BEGIN:STANDARD\r\nTZOFFSETFROM:+0830\r\nTZOFFSETTO:+0900\r\nTZNAME:KST\r\nDTSTART:20180504T233000\r\nRDATE:20180504T233000\r\nEND:STANDARD"],latitude:"+0390100",longitude:"+1254500"},"Asia/Qatar":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0251700",longitude:"+0513200"},"Asia/Qostanay":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0531200",longitude:"+0633700"},"Asia/Qyzylorda":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD","BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:20181221T000000\r\nRDATE:20181221T000000\r\nEND:STANDARD"],latitude:"+0444800",longitude:"+0652800"},"Asia/Riyadh":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0243800",longitude:"+0464300"},"Asia/Sakhalin":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0465800",longitude:"+1424200"},"Asia/Samarkand":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0394000",longitude:"+0664800"},"Asia/Seoul":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0900\r\nTZOFFSETTO:+0900\r\nTZNAME:KST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0373300",longitude:"+1265800"},"Asia/Shanghai":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0311400",longitude:"+1212800"},"Asia/Singapore":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:+08\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0011700",longitude:"+1035100"},"Asia/Srednekolymsk":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0672800",longitude:"+1534300"},"Asia/Taipei":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0250300",longitude:"+1213000"},"Asia/Tashkent":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0412000",longitude:"+0691800"},"Asia/Tbilisi":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0414300",longitude:"+0444900"},"Asia/Tehran":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0330\r\nTZNAME:+0330\r\nDTSTART:19700101T000000\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0330\r\nTZOFFSETTO:+0430\r\nTZNAME:+0430\r\nDTSTART:20180321T235959\r\nRDATE:20180321T235959\r\nRDATE:20190321T235959\r\nRDATE:20200320T235959\r\nRDATE:20210321T235959\r\nRDATE:20220321T235959\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0430\r\nTZOFFSETTO:+0330\r\nTZNAME:+0330\r\nDTSTART:20180921T235959\r\nRDATE:20180921T235959\r\nRDATE:20190921T235959\r\nRDATE:20200920T235959\r\nRDATE:20210921T235959\r\nRDATE:20220921T235959\r\nEND:STANDARD"],latitude:"+0354000",longitude:"+0512600"},"Asia/Thimphu":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0272800",longitude:"+0893900"},"Asia/Tokyo":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0900\r\nTZOFFSETTO:+0900\r\nTZNAME:JST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0353916",longitude:"+1394441"},"Asia/Tomsk":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0563000",longitude:"+0845800"},"Asia/Ulaanbaatar":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:+08\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0475500",longitude:"+1065300"},"Asia/Urumqi":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0434800",longitude:"+0873500"},"Asia/Ust-Nera":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:+10\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0643337",longitude:"+1431336"},"Asia/Vientiane":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0175800",longitude:"+1023600"},"Asia/Vladivostok":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:+10\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0431000",longitude:"+1315600"},"Asia/Yakutsk":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0900\r\nTZOFFSETTO:+0900\r\nTZNAME:+09\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0620000",longitude:"+1294000"},"Asia/Yangon":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0630\r\nTZOFFSETTO:+0630\r\nTZNAME:+0630\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0164700",longitude:"+0961000"},"Asia/Yekaterinburg":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0565100",longitude:"+0603600"},"Asia/Yerevan":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0401100",longitude:"+0443000"},"Atlantic/Azores":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0100\r\nTZOFFSETTO:+0000\r\nTZNAME:+00\r\nDTSTART:19700329T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:-0100\r\nTZNAME:-01\r\nDTSTART:19701025T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0374400",longitude:"-0254000"},"Atlantic/Bermuda":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:ADT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"],latitude:"+0321700",longitude:"-0644600"},"Atlantic/Canary":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:WEST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:WET\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0280600",longitude:"-0152400"},"Atlantic/Cape_Verde":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0100\r\nTZOFFSETTO:-0100\r\nTZNAME:-01\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0145500",longitude:"-0233100"},"Atlantic/Faroe":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:WEST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:WET\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0620100",longitude:"-0064600"},"Atlantic/Madeira":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:WEST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:WET\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0323800",longitude:"-0165400"},"Atlantic/Reykjavik":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0640900",longitude:"-0215100"},"Atlantic/South_Georgia":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0200\r\nTZOFFSETTO:-0200\r\nTZNAME:-02\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0541600",longitude:"-0363200"},"Atlantic/St_Helena":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0155500",longitude:"-0054200"},"Atlantic/Stanley":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0514200",longitude:"-0575100"},"Australia/Adelaide":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1030\r\nTZOFFSETTO:+0930\r\nTZNAME:ACST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0930\r\nTZOFFSETTO:+1030\r\nTZNAME:ACDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT"],latitude:"-0345500",longitude:"+1383500"},"Australia/Brisbane":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0272800",longitude:"+1530200"},"Australia/Broken_Hill":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1030\r\nTZOFFSETTO:+0930\r\nTZNAME:ACST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0930\r\nTZOFFSETTO:+1030\r\nTZNAME:ACDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT"],latitude:"-0315700",longitude:"+1412700"},"Australia/Currie":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1100\r\nTZNAME:AEDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD"],latitude:"-0395600",longitude:"+1435200"},"Australia/Darwin":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0930\r\nTZOFFSETTO:+0930\r\nTZNAME:ACST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0122800",longitude:"+1305000"},"Australia/Eucla":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0845\r\nTZOFFSETTO:+0845\r\nTZNAME:+0845\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0314300",longitude:"+1285200"},"Australia/Hobart":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1100\r\nTZNAME:AEDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD"],latitude:"-0425300",longitude:"+1471900"},"Australia/Lindeman":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0201600",longitude:"+1490000"},"Australia/Lord_Howe":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1030\r\nTZNAME:+1030\r\nDTSTART:19700405T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1030\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT"],latitude:"-0313300",longitude:"+1590500"},"Australia/Melbourne":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1100\r\nTZNAME:AEDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT"],latitude:"-0374900",longitude:"+1445800"},"Australia/Perth":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:AWST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0315700",longitude:"+1155100"},"Australia/Sydney":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1100\r\nTZNAME:AEDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT"],latitude:"-0335200",longitude:"+1511300"},"Europe/Amsterdam":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0522200",longitude:"+0045400"},"Europe/Andorra":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0423000",longitude:"+0013100"},"Europe/Astrakhan":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0462100",longitude:"+0480300"},"Europe/Athens":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0375800",longitude:"+0234300"},"Europe/Belgrade":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0445000",longitude:"+0203000"},"Europe/Berlin":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0523000",longitude:"+0132200"},"Europe/Bratislava":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0480900",longitude:"+0170700"},"Europe/Brussels":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0505000",longitude:"+0042000"},"Europe/Bucharest":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0442600",longitude:"+0260600"},"Europe/Budapest":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0473000",longitude:"+0190500"},"Europe/Busingen":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0474200",longitude:"+0084100"},"Europe/Chisinau":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0470000",longitude:"+0285000"},"Europe/Copenhagen":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0554000",longitude:"+0123500"},"Europe/Dublin":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:IST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:DAYLIGHT"],latitude:"+0532000",longitude:"-0061500"},"Europe/Gibraltar":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0360800",longitude:"-0052100"},"Europe/Guernsey":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:BST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0492717",longitude:"-0023210"},"Europe/Helsinki":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0601000",longitude:"+0245800"},"Europe/Isle_of_Man":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:BST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0540900",longitude:"-0042800"},"Europe/Istanbul":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0410100",longitude:"+0285800"},"Europe/Jersey":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:BST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0491101",longitude:"-0020624"},"Europe/Kaliningrad":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0544300",longitude:"+0203000"},"Europe/Kiev":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0502600",longitude:"+0303100"},"Europe/Kirov":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0583600",longitude:"+0493900"},"Europe/Lisbon":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:WET\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:WEST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT"],latitude:"+0384300",longitude:"-0090800"},"Europe/Ljubljana":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0460300",longitude:"+0143100"},"Europe/London":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:BST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0513030",longitude:"+0000731"},"Europe/Luxembourg":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0493600",longitude:"+0060900"},"Europe/Madrid":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0402400",longitude:"-0034100"},"Europe/Malta":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0355400",longitude:"+0143100"},"Europe/Mariehamn":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0600600",longitude:"+0195700"},"Europe/Minsk":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0535400",longitude:"+0273400"},"Europe/Monaco":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0434200",longitude:"+0072300"},"Europe/Moscow":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:MSK\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0554521",longitude:"+0373704"},"Europe/Nicosia":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT"],latitude:"+0351000",longitude:"+0332200"},"Europe/Oslo":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0595500",longitude:"+0104500"},"Europe/Paris":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0485200",longitude:"+0022000"},"Europe/Podgorica":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0422600",longitude:"+0191600"},"Europe/Prague":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0500500",longitude:"+0142600"},"Europe/Riga":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0565700",longitude:"+0240600"},"Europe/Rome":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0415400",longitude:"+0122900"},"Europe/Samara":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0531200",longitude:"+0500900"},"Europe/San_Marino":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0435500",longitude:"+0122800"},"Europe/Sarajevo":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0435200",longitude:"+0182500"},"Europe/Saratov":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0513400",longitude:"+0460200"},"Europe/Simferopol":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:MSK\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0445700",longitude:"+0340600"},"Europe/Skopje":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0415900",longitude:"+0212600"},"Europe/Sofia":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0424100",longitude:"+0231900"},"Europe/Stockholm":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0592000",longitude:"+0180300"},"Europe/Tallinn":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0592500",longitude:"+0244500"},"Europe/Tirane":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0412000",longitude:"+0195000"},"Europe/Ulyanovsk":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0542000",longitude:"+0482400"},"Europe/Uzhgorod":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0483700",longitude:"+0221800"},"Europe/Vaduz":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0470900",longitude:"+0093100"},"Europe/Vatican":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0415408",longitude:"+0122711"},"Europe/Vienna":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0481300",longitude:"+0162000"},"Europe/Vilnius":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0544100",longitude:"+0251900"},"Europe/Volgograd":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:20181028T020000\r\nRDATE:20181028T020000\r\nEND:STANDARD","BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0484400",longitude:"+0442500"},"Europe/Warsaw":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0521500",longitude:"+0210000"},"Europe/Zagreb":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0454800",longitude:"+0155800"},"Europe/Zaporozhye":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0475000",longitude:"+0351000"},"Europe/Zurich":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"],latitude:"+0472300",longitude:"+0083200"},"Indian/Antananarivo":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0185500",longitude:"+0473100"},"Indian/Chagos":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0072000",longitude:"+0722500"},"Indian/Christmas":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0102500",longitude:"+1054300"},"Indian/Cocos":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0630\r\nTZOFFSETTO:+0630\r\nTZNAME:+0630\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0121000",longitude:"+0965500"},"Indian/Comoro":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0114100",longitude:"+0431600"},"Indian/Kerguelen":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0492110",longitude:"+0701303"},"Indian/Mahe":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0044000",longitude:"+0552800"},"Indian/Maldives":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0041000",longitude:"+0733000"},"Indian/Mauritius":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0201000",longitude:"+0573000"},"Indian/Mayotte":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0124700",longitude:"+0451400"},"Indian/Reunion":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0205200",longitude:"+0552800"},"Pacific/Apia":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1400\r\nTZOFFSETTO:+1300\r\nTZNAME:+13\r\nDTSTART:19700405T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1300\r\nTZOFFSETTO:+1400\r\nTZNAME:+14\r\nDTSTART:19700927T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=9;BYDAY=-1SU\r\nEND:DAYLIGHT"],latitude:"-0135000",longitude:"-1714400"},"Pacific/Auckland":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1300\r\nTZNAME:NZDT\r\nDTSTART:19700927T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=9;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+1300\r\nTZOFFSETTO:+1200\r\nTZNAME:NZST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD"],latitude:"-0365200",longitude:"+1744600"},"Pacific/Bougainville":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0061300",longitude:"+1553400"},"Pacific/Chatham":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1245\r\nTZOFFSETTO:+1345\r\nTZNAME:+1345\r\nDTSTART:19700927T024500\r\nRRULE:FREQ=YEARLY;BYMONTH=9;BYDAY=-1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+1345\r\nTZOFFSETTO:+1245\r\nTZNAME:+1245\r\nDTSTART:19700405T034500\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD"],latitude:"-0435700",longitude:"-1763300"},"Pacific/Chuuk":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:+10\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0072500",longitude:"+1514700"},"Pacific/Easter":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:-06\r\nDTSTART:20190406T220000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SA\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:-05\r\nDTSTART:20190907T220000\r\nRRULE:FREQ=YEARLY;BYMONTH=9;BYDAY=1SA\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:-06\r\nDTSTART:19700101T000000\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:-05\r\nDTSTART:20180811T220000\r\nRDATE:20180811T220000\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:-06\r\nDTSTART:20180512T220000\r\nRDATE:20180512T220000\r\nEND:STANDARD"],latitude:"-0270900",longitude:"-1092600"},"Pacific/Efate":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0174000",longitude:"+1682500"},"Pacific/Enderbury":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1300\r\nTZOFFSETTO:+1300\r\nTZNAME:+13\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0030800",longitude:"-1710500"},"Pacific/Fakaofo":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1300\r\nTZOFFSETTO:+1300\r\nTZNAME:+13\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0092200",longitude:"-1711400"},"Pacific/Fiji":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1300\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700118T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=1;BYMONTHDAY=12,13,14,15,16,17,18;BYDAY=SU\r\nEND:STANDARD","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1300\r\nTZNAME:+13\r\nDTSTART:20191110T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=2SU\r\nEND:DAYLIGHT","BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1300\r\nTZNAME:+13\r\nDTSTART:20181104T020000\r\nRDATE:20181104T020000\r\nEND:DAYLIGHT"],latitude:"-0180800",longitude:"+1782500"},"Pacific/Funafuti":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0083100",longitude:"+1791300"},"Pacific/Galapagos":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:-06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0005400",longitude:"-0893600"},"Pacific/Gambier":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-0900\r\nTZNAME:-09\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0230800",longitude:"-1345700"},"Pacific/Guadalcanal":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0093200",longitude:"+1601200"},"Pacific/Guam":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:ChST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0132800",longitude:"+1444500"},"Pacific/Honolulu":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-1000\r\nTZOFFSETTO:-1000\r\nTZNAME:HST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0211825",longitude:"-1575130"},"Pacific/Kiritimati":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1400\r\nTZOFFSETTO:+1400\r\nTZNAME:+14\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0015200",longitude:"-1572000"},"Pacific/Kosrae":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0051900",longitude:"+1625900"},"Pacific/Kwajalein":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0090500",longitude:"+1672000"},"Pacific/Majuro":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0070900",longitude:"+1711200"},"Pacific/Marquesas":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0930\r\nTZOFFSETTO:-0930\r\nTZNAME:-0930\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0090000",longitude:"-1393000"},"Pacific/Midway":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-1100\r\nTZOFFSETTO:-1100\r\nTZNAME:SST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0281300",longitude:"-1772200"},"Pacific/Nauru":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0003100",longitude:"+1665500"},"Pacific/Niue":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-1100\r\nTZOFFSETTO:-1100\r\nTZNAME:-11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0190100",longitude:"-1695500"},"Pacific/Norfolk":{ics:["BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:20191006T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT","BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:20200405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD","BEGIN:STANDARD\r\nTZOFFSETFROM:+1130\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD","BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:20190701T000000\r\nRDATE:20190701T000000\r\nEND:STANDARD"],latitude:"-0290300",longitude:"+1675800"},"Pacific/Noumea":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0221600",longitude:"+1662700"},"Pacific/Pago_Pago":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-1100\r\nTZOFFSETTO:-1100\r\nTZNAME:SST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0141600",longitude:"-1704200"},"Pacific/Palau":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+0900\r\nTZOFFSETTO:+0900\r\nTZNAME:+09\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0072000",longitude:"+1342900"},"Pacific/Pitcairn":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0800\r\nTZNAME:-08\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0250400",longitude:"-1300500"},"Pacific/Pohnpei":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0065800",longitude:"+1581300"},"Pacific/Port_Moresby":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:+10\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0093000",longitude:"+1471000"},"Pacific/Rarotonga":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-1000\r\nTZOFFSETTO:-1000\r\nTZNAME:-10\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0211400",longitude:"-1594600"},"Pacific/Saipan":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:ChST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0151200",longitude:"+1454500"},"Pacific/Tahiti":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:-1000\r\nTZOFFSETTO:-1000\r\nTZNAME:-10\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0173200",longitude:"-1493400"},"Pacific/Tarawa":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0012500",longitude:"+1730000"},"Pacific/Tongatapu":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1300\r\nTZOFFSETTO:+1300\r\nTZNAME:+13\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0211000",longitude:"-1751000"},"Pacific/Wake":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"+0191700",longitude:"+1663700"},"Pacific/Wallis":{ics:["BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"],latitude:"-0131800",longitude:"-1761000"}}};
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */
class uT{constructor(){this._aliases=new Map,this._timezones=new Map}getTimezoneForId(T){return this._getTimezoneForIdRec(T,0)}_getTimezoneForIdRec(T,r){if(this._timezones.has(T))return this._timezones.get(T);if(r>=20)return console.error("TimezoneManager.getTimezoneForIdRec() exceeds recursion limits"),null;if(this._aliases.has(T)){const e=this._aliases.get(T);return this._getTimezoneForIdRec(e,r+1)}return null}hasTimezoneForId(T){return this._timezones.has(T)||this._aliases.has(T)}isAlias(T){return!this._timezones.has(T)&&this._aliases.has(T)}listAllTimezones(T=!1){const r=Array.from(this._timezones.keys());return T?r.concat(Array.from(this._aliases.keys())):r}registerTimezone(T){this._timezones.set(T.timezoneId,T)}registerDefaultTimezones(){console.debug(`@nextcloud/calendar-js app is using version ${NT.version} of the timezone database`);for(const T in NT.zones)if(Object.prototype.hasOwnProperty.call(NT.zones,[T])){const r=["BEGIN:VTIMEZONE","TZID:"+T,...NT.zones[T].ics,"END:VTIMEZONE"].join("\r\n");this.registerTimezoneFromICS(T,r)}for(const T in NT.aliases)Object.prototype.hasOwnProperty.call(NT.aliases,[T])&&this.registerAlias(T,NT.aliases[T].aliasTo)}registerTimezoneFromICS(T,r){const e=new K(T,r);this.registerTimezone(e)}registerAlias(T,r){this._aliases.set(T,r)}unregisterTimezones(T){this._timezones.delete(T)}unregisterAlias(T){this._aliases.delete(T)}clearAllTimezones(){this._aliases=new Map,this._timezones=new Map,OT.registerTimezone(K.utc),OT.registerTimezone(K.floating),OT.registerAlias("GMT",K.utc.timezoneId),OT.registerAlias("Z",K.utc.timezoneId)}}const OT=new uT;function lT(){return OT}OT.clearAllTimezones();
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */
class cT extends i{constructor(...T){super(...T),this._rawData=null,this._calendarComponent=null,this._containsVEvents=!1,this._containsVJournals=!1,this._containsVTodos=!1,this._containsVFreeBusy=!1,this._items=new Map,this._masterItems=new Map,this._recurrenceExceptionItems=new Map,this._forgedMasterItems=new Map,this._timezones=new Map,this._requiredTimezones=new Map,this._defaultTimezoneManager=lT()}parse(T){this._rawData=T,this._applyRepairSteps(),this._extractTimezones(),this._registerTimezones(),this._createCalendarComponent(),this._getOption("extractGlobalProperties",!1)&&this._extractProperties(),this._processVObjects(),this._getOption("processFreeBusy",!1)&&this._processVFreeBusy()}*getItemIterator(){for(const T of this._items.values()){const r=aT.fromEmpty();this._getOption("includeTimezones",!1)&&this._addRequiredTimezonesToCalendarComp(r,T[0].uid),this._calendarComponent.hasProperty("PRODID")&&(r.deleteAllProperties("PRODID"),r.addProperty(this._calendarComponent.getFirstProperty("PRODID").clone())),this._getOption("preserveMethod",!1)&&this._calendarComponent.hasProperty("METHOD")&&(r.deleteAllProperties("METHOD"),r.addProperty(this._calendarComponent.getFirstProperty("METHOD").clone()));for(const e of T)r.addComponent(e);yield r}}containsVEvents(){return this._containsVEvents}containsVJournals(){return this._containsVJournals}containsVTodos(){return this._containsVTodos}containsVFreeBusy(){return this._containsVFreeBusy}getItemCount(){return Array.from(this._items.keys()).length}_applyRepairSteps(){for(const T of function*(){yield ET,yield DT,yield sT,yield oT,yield RT,yield ST,yield FT}()){const r=new T;this._rawData=r.repair(this._rawData)}}_createCalendarComponent(){const T=t.default.parse(this._rawData),r=new t.default.Component(T);this._calendarComponent=aT.fromICALJs(r)}_extractProperties(){this._extractPropertyAndPutResultIntoVariable(["name","x-wr-calname"],"_name"),this._extractPropertyAndPutResultIntoVariable(["color","x-apple-calendar-color"],"_color"),this._extractPropertyAndPutResultIntoVariable(["source"],"_sourceURL"),this._extractPropertyAndPutResultIntoVariable(["refresh-interval","x-published-ttl"],"_refreshInterval"),this._extractPropertyAndPutResultIntoVariable(["x-wr-timezone"],"_calendarTimezone")}_extractPropertyAndPutResultIntoVariable(T,r){for(const e of T)if(this._calendarComponent.hasProperty(e))return void(this[r]=this._calendarComponent.getFirstPropertyFirstValue(e))}_extractTimezones(){const T=this._rawData.match(/^BEGIN:VTIMEZONE$(((?!^END:VTIMEZONE$)(.|\n))*)^END:VTIMEZONE$\n/gm);if(T)for(const r of T){const T=r.match(/^TZID:(.*)$/gm);if(!T)continue;const e=T[0].substr(5),n=new K(e,r);this._timezones.set(e,n)}}_registerTimezones(){for(const[T,r]of this._timezones)this._defaultTimezoneManager.hasTimezoneForId(T)||this._defaultTimezoneManager.registerTimezone(r)}_processVObjects(){for(const T of this._calendarComponent.getVObjectIterator()){this._addItem(T),this._markCompTypeAsSeen(T.name),T.isRecurrenceException()?this._addRecurrenceException(T):(T.recurrenceManager=new J(T),this._masterItems.set(T.uid,T));for(const r of T.getPropertyIterator())for(const e of r.getValueIterator())e instanceof Y&&e.timezoneId&&this._addRequiredTimezone(T.uid,e.timezoneId);for(const r of T.getAlarmIterator())for(const e of r.getPropertyIterator())for(const r of e.getValueIterator())r instanceof Y&&r.timezoneId&&this._addRequiredTimezone(T.uid,r.timezoneId);if(this._getOption("removeRSVPForAttendees",!1))for(const r of T.getAttendeeIterator())r.deleteParameter("RSVP")}for(const T of this._recurrenceExceptionItems.values())for(const r of T){if(this._masterItems.has(r.uid)){const T=this._masterItems.get(r.uid);T.isRecurring()||this._forgedMasterItems.set(T.uid,T)}else{const T=new(iT(r.name))(r.name,[["UID",r.uid],["DTSTAMP",r.stampTime.clone()],["DTSTART",r.recurrenceId.clone()]]);T.recurrenceManager=new J(T),this._forgedMasterItems.set(r.uid,T),this._masterItems.set(r.uid,T),this._addItem(T)}if(this._forgedMasterItems.has(r.uid)){this._forgedMasterItems.get(r.uid).recurrenceManager.addRecurrenceDate(!1,r.recurrenceId.clone())}this._masterItems.get(r.uid).recurrenceManager.relateRecurrenceException(r)}}_processVFreeBusy(){for(const T of this._calendarComponent.getFreebusyIterator()){this._addItem(T),this._markCompTypeAsSeen(T.name);for(const r of T.getPropertyIterator())for(const e of r.getValueIterator())e instanceof Y&&e.timezoneId&&this._addRequiredTimezone(T.uid,e.timezoneId)}}_addRecurrenceException(T){if(this._recurrenceExceptionItems.has(T.uid)){this._recurrenceExceptionItems.get(T.uid).push(T)}else this._recurrenceExceptionItems.set(T.uid,[T])}_addItem(T){if(this._items.has(T.uid)){this._items.get(T.uid).push(T)}else this._items.set(T.uid,[T])}_addRequiredTimezone(T,r){if("UTC"!==r&&"floating"!==r&&"GMT"!==r&&"Z"!==r)if(this._requiredTimezones.has(T))this._requiredTimezones.get(T).add(r);else{const e=new Set([r]);this._requiredTimezones.set(T,e)}}_addRequiredTimezonesToCalendarComp(T,r){if(this._requiredTimezones.has(r))for(const e of this._requiredTimezones.get(r)){if(!this._defaultTimezoneManager.hasTimezoneForId(e))return;const r=this._defaultTimezoneManager.getTimezoneForId(e);r.timezoneId!==e&&this._replaceTimezoneWithAnotherOne(T,e,r.timezoneId);const n=r.toTimezoneComponent();T.addComponent(n)}}_replaceTimezoneWithAnotherOne(T,r,e){for(const T of this._calendarComponent.getVObjectIterator()){for(const n of T.getPropertyIterator())for(const T of n.getValueIterator())T instanceof Y&&T.timezoneId===r&&T.silentlyReplaceTimezone(e);for(const n of T.getAlarmIterator())for(const T of n.getPropertyIterator())for(const n of T.getValueIterator())n instanceof Y&&n.timezoneId===r&&n.silentlyReplaceTimezone(e)}}_markCompTypeAsSeen(T){switch(s(T)){case"VEVENT":this._containsVEvents=!0;break;case"VJOURNAL":this._containsVJournals=!0;break;case"VTODO":this._containsVTodos=!0;break;case"VFREEBUSY":this._containsVFreeBusy=!0}}static getMimeTypes(){return["text/calendar"]}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class dT{constructor(){this._parsers=[]}getAllSupportedFileTypes(){return this._parsers.reduce(((T,r)=>T.concat(r.getMimeTypes())),[])}getParserForFileType(T,r){const e=this._parsers.find((r=>r.getMimeTypes().includes(T)));if(!e)throw new TypeError("Unknown file-type.");return new e(r)}registerParser(T){this._parsers.push(T)}}function YT(){const T=new dT;return T.registerParser(cT),T}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class ZT{constructor(T){this._timezoneManager=T}has(T){return this._timezoneManager.hasTimezoneForId(T)}get(T){const r=this._timezoneManager.getTimezoneForId(T);if(r)return r.toICALTimezone()}register(){throw new TypeError("Not allowed to register new timezone")}remove(){throw new TypeError("Not allowed to remove timezone")}reset(){throw new TypeError("Not allowed to reset TimezoneService")}}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */class MT extends Error{}
/**
	 * @copyright Copyright (c) 2021 Christoph Wurst
	 *
	 * @author Christoph Wurst <christoph@winzerhof-wurst.at>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */function IT(T){return T.split("_").join(" ").replace("St ","St. ").split("/").join(" - ")}
/**
	 * @copyright Copyright (c) 2019 Georg Ehrke
	 *
	 * @author Georg Ehrke <georg-nextcloud@ehrke.email>
	 *
	 * @author Richard Steinmetz <richard@steinmetz.cloud>
	 *
	 * @license GNU AGPL version 3 or any later version
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 *
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <http://www.gnu.org/licenses/>.
	 *
	 */t.default.TimezoneService instanceof ZT||(t.default.TimezoneService=new ZT(lT())),T.AbstractComponent=Q,T.AbstractParser=i,T.AbstractRecurringComponent=q,T.AbstractValue=l,T.AlarmComponent=j,T.AttachmentProperty=L,T.AttendeeProperty=p,T.BinaryValue=c,T.CalendarComponent=aT,T.ConferenceProperty=G,T.DateTimeValue=Y,T.DurationValue=d,T.EventComponent=rT,T.ExpectedICalJSError=E,T.FreeBusyComponent=eT,T.FreeBusyProperty=f,T.GeoProperty=U,T.ICalendarParser=cT,T.IllegalValueError=MT,T.ImageProperty=_,T.JournalComponent=nT,T.ModificationNotAllowedError=a,T.Parameter=O,T.ParserManager=dT,T.PeriodValue=Z,T.Property=g,T.RecurValue=I,T.RecurrenceManager=J,T.RecurringWithoutDtStartError=z,T.RelationProperty=y,T.RequestStatusProperty=C,T.TextProperty=H,T.Timezone=K,T.TimezoneAdapter=ZT,T.TimezoneComponent=W,T.TimezoneManager=uT,T.ToDoComponent=tT,T.TriggerProperty=P,T.UTCOffsetValue=m,T.UnknownICALTypeError=h,T.createEvent=function(T,r){const n=aT.fromEmpty(),t=new rT("VEVENT");return t.updatePropertyWithValue("CREATED",Y.fromJSDate(k(),!0)),t.updatePropertyWithValue("DTSTAMP",Y.fromJSDate(k(),!0)),t.updatePropertyWithValue("LAST-MODIFIED",Y.fromJSDate(k(),!0)),t.updatePropertyWithValue("SEQUENCE",0),t.updatePropertyWithValue("UID",e.v4()),t.updatePropertyWithValue("DTSTART",T),t.updatePropertyWithValue("DTEND",r),n.addComponent(t),t.recurrenceManager=new J(t),n},T.createFreeBusyRequest=function(T,r,n,t){const i=aT.fromMethod("REQUEST"),a=new eT("VFREEBUSY");a.updatePropertyWithValue("DTSTAMP",Y.fromJSDate(k(),!0)),a.updatePropertyWithValue("UID",e.v4()),a.updatePropertyWithValue("DTSTART",T.clone().getInUTC()),a.updatePropertyWithValue("DTEND",r.clone().getInUTC()),a.addProperty(n.clone());for(const T of t){const r=T.clone();r.deleteParameter("ROLE"),r.deleteParameter("CUTYPE"),r.deleteParameter("RSVP"),r.deleteParameter("PARTSTAT"),r.deleteParameter("REQUEST-STATUS"),r.deleteParameter("LANGUAGE"),a.addProperty(r)}return i.addComponent(a),i},T.getConstructorForICALType=B,T.getConstructorForPropertyName=V,T.getParserManager=YT,T.getReadableTimezoneName=IT,T.getSortedTimezoneList=function(T=[],r=[],e="Global"){const n={},t=[];for(const r of T){const T=r.split("/");let[t,i]=[T.shift(),T.join("/")];i||(i=t,t=e),n[t]=n[t]||{continent:t,regions:[]},n[t].regions.push({label:IT(i),cities:[],timezoneId:r})}for(const T of r){const{continent:r,label:e,timezoneId:t}=T;n[r]=n[r]||{continent:r,regions:[]},n[r].regions.push({label:e,cities:[],timezoneId:t})}for(const T in n)Object.prototype.hasOwnProperty.call(n,T)&&(n[T].regions.sort(((T,r)=>T.label<r.label?-1:1)),t.push(n[T]));return t.sort(((T,r)=>T.continent<r.continent?-1:1)),t},T.getTimezoneManager=lT,T.isOlsonTimezone=function(T){const r=-1!==T.indexOf("/"),e=-1!==T.indexOf(" "),n=T.startsWith("Etc"),t=T.startsWith("US/");return r&&!e&&!n&&!t},T.parseICSAndGetAllOccurrencesBetween=function*(T,r,e){const n=YT().getParserForFileType("text/calendar");n.parse(T);const t=n.getItemIterator().next().value;if(void 0===t)return;const i=t.getVObjectIterator().next().value;void 0!==i&&(yield*i.recurrenceManager.getAllOccurrencesBetweenIterator(r,e))},T.setConfig=function(T,r){S.set(T,r)},Object.defineProperty(T,"__esModule",{value:!0})}));
//# sourceMappingURL=index.umd.js.map
